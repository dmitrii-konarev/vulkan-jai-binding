vkCreateInstance : PFN_vkCreateInstance;
vkDestroyInstance : PFN_vkDestroyInstance;
vkEnumeratePhysicalDevices : PFN_vkEnumeratePhysicalDevices;
vkGetDeviceProcAddr : PFN_vkGetDeviceProcAddr;
vkGetInstanceProcAddr : PFN_vkGetInstanceProcAddr;
vkGetPhysicalDeviceProperties : PFN_vkGetPhysicalDeviceProperties;
vkGetPhysicalDeviceQueueFamilyProperties : PFN_vkGetPhysicalDeviceQueueFamilyProperties;
vkGetPhysicalDeviceMemoryProperties : PFN_vkGetPhysicalDeviceMemoryProperties;
vkGetPhysicalDeviceFeatures : PFN_vkGetPhysicalDeviceFeatures;
vkGetPhysicalDeviceFormatProperties : PFN_vkGetPhysicalDeviceFormatProperties;
vkGetPhysicalDeviceImageFormatProperties : PFN_vkGetPhysicalDeviceImageFormatProperties;
vkCreateDevice : PFN_vkCreateDevice;
vkDestroyDevice : PFN_vkDestroyDevice;
vkEnumerateInstanceVersion : PFN_vkEnumerateInstanceVersion;
vkEnumerateInstanceLayerProperties : PFN_vkEnumerateInstanceLayerProperties;
vkEnumerateInstanceExtensionProperties : PFN_vkEnumerateInstanceExtensionProperties;
vkEnumerateDeviceLayerProperties : PFN_vkEnumerateDeviceLayerProperties;
vkEnumerateDeviceExtensionProperties : PFN_vkEnumerateDeviceExtensionProperties;
vkGetDeviceQueue : PFN_vkGetDeviceQueue;
vkQueueSubmit : PFN_vkQueueSubmit;
vkQueueWaitIdle : PFN_vkQueueWaitIdle;
vkDeviceWaitIdle : PFN_vkDeviceWaitIdle;
vkAllocateMemory : PFN_vkAllocateMemory;
vkFreeMemory : PFN_vkFreeMemory;
vkMapMemory : PFN_vkMapMemory;
vkUnmapMemory : PFN_vkUnmapMemory;
vkFlushMappedMemoryRanges : PFN_vkFlushMappedMemoryRanges;
vkInvalidateMappedMemoryRanges : PFN_vkInvalidateMappedMemoryRanges;
vkGetDeviceMemoryCommitment : PFN_vkGetDeviceMemoryCommitment;
vkGetBufferMemoryRequirements : PFN_vkGetBufferMemoryRequirements;
vkBindBufferMemory : PFN_vkBindBufferMemory;
vkGetImageMemoryRequirements : PFN_vkGetImageMemoryRequirements;
vkBindImageMemory : PFN_vkBindImageMemory;
vkGetImageSparseMemoryRequirements : PFN_vkGetImageSparseMemoryRequirements;
vkGetPhysicalDeviceSparseImageFormatProperties : PFN_vkGetPhysicalDeviceSparseImageFormatProperties;
vkQueueBindSparse : PFN_vkQueueBindSparse;
vkCreateFence : PFN_vkCreateFence;
vkDestroyFence : PFN_vkDestroyFence;
vkResetFences : PFN_vkResetFences;
vkGetFenceStatus : PFN_vkGetFenceStatus;
vkWaitForFences : PFN_vkWaitForFences;
vkCreateSemaphore : PFN_vkCreateSemaphore;
vkDestroySemaphore : PFN_vkDestroySemaphore;
vkCreateEvent : PFN_vkCreateEvent;
vkDestroyEvent : PFN_vkDestroyEvent;
vkGetEventStatus : PFN_vkGetEventStatus;
vkSetEvent : PFN_vkSetEvent;
vkResetEvent : PFN_vkResetEvent;
vkCreateQueryPool : PFN_vkCreateQueryPool;
vkDestroyQueryPool : PFN_vkDestroyQueryPool;
vkGetQueryPoolResults : PFN_vkGetQueryPoolResults;
vkResetQueryPool : PFN_vkResetQueryPool;
vkResetQueryPoolEXT : PFN_vkResetQueryPoolEXT;
vkCreateBuffer : PFN_vkCreateBuffer;
vkDestroyBuffer : PFN_vkDestroyBuffer;
vkCreateBufferView : PFN_vkCreateBufferView;
vkDestroyBufferView : PFN_vkDestroyBufferView;
vkCreateImage : PFN_vkCreateImage;
vkDestroyImage : PFN_vkDestroyImage;
vkGetImageSubresourceLayout : PFN_vkGetImageSubresourceLayout;
vkCreateImageView : PFN_vkCreateImageView;
vkDestroyImageView : PFN_vkDestroyImageView;
vkCreateShaderModule : PFN_vkCreateShaderModule;
vkDestroyShaderModule : PFN_vkDestroyShaderModule;
vkCreatePipelineCache : PFN_vkCreatePipelineCache;
vkDestroyPipelineCache : PFN_vkDestroyPipelineCache;
vkGetPipelineCacheData : PFN_vkGetPipelineCacheData;
vkMergePipelineCaches : PFN_vkMergePipelineCaches;
vkCreatePipelineBinariesKHR : PFN_vkCreatePipelineBinariesKHR;
vkDestroyPipelineBinaryKHR : PFN_vkDestroyPipelineBinaryKHR;
vkGetPipelineKeyKHR : PFN_vkGetPipelineKeyKHR;
vkGetPipelineBinaryDataKHR : PFN_vkGetPipelineBinaryDataKHR;
vkReleaseCapturedPipelineDataKHR : PFN_vkReleaseCapturedPipelineDataKHR;
vkCreateGraphicsPipelines : PFN_vkCreateGraphicsPipelines;
vkCreateComputePipelines : PFN_vkCreateComputePipelines;
vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI : PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI;
vkDestroyPipeline : PFN_vkDestroyPipeline;
vkCreatePipelineLayout : PFN_vkCreatePipelineLayout;
vkDestroyPipelineLayout : PFN_vkDestroyPipelineLayout;
vkCreateSampler : PFN_vkCreateSampler;
vkDestroySampler : PFN_vkDestroySampler;
vkCreateDescriptorSetLayout : PFN_vkCreateDescriptorSetLayout;
vkDestroyDescriptorSetLayout : PFN_vkDestroyDescriptorSetLayout;
vkCreateDescriptorPool : PFN_vkCreateDescriptorPool;
vkDestroyDescriptorPool : PFN_vkDestroyDescriptorPool;
vkResetDescriptorPool : PFN_vkResetDescriptorPool;
vkAllocateDescriptorSets : PFN_vkAllocateDescriptorSets;
vkFreeDescriptorSets : PFN_vkFreeDescriptorSets;
vkUpdateDescriptorSets : PFN_vkUpdateDescriptorSets;
vkCreateFramebuffer : PFN_vkCreateFramebuffer;
vkDestroyFramebuffer : PFN_vkDestroyFramebuffer;
vkCreateRenderPass : PFN_vkCreateRenderPass;
vkDestroyRenderPass : PFN_vkDestroyRenderPass;
vkGetRenderAreaGranularity : PFN_vkGetRenderAreaGranularity;
vkGetRenderingAreaGranularity : PFN_vkGetRenderingAreaGranularity;
vkGetRenderingAreaGranularityKHR : PFN_vkGetRenderingAreaGranularityKHR;
vkCreateCommandPool : PFN_vkCreateCommandPool;
vkDestroyCommandPool : PFN_vkDestroyCommandPool;
vkResetCommandPool : PFN_vkResetCommandPool;
vkAllocateCommandBuffers : PFN_vkAllocateCommandBuffers;
vkFreeCommandBuffers : PFN_vkFreeCommandBuffers;
vkBeginCommandBuffer : PFN_vkBeginCommandBuffer;
vkEndCommandBuffer : PFN_vkEndCommandBuffer;
vkResetCommandBuffer : PFN_vkResetCommandBuffer;
vkCmdBindPipeline : PFN_vkCmdBindPipeline;
vkCmdSetAttachmentFeedbackLoopEnableEXT : PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT;
vkCmdSetViewport : PFN_vkCmdSetViewport;
vkCmdSetScissor : PFN_vkCmdSetScissor;
vkCmdSetLineWidth : PFN_vkCmdSetLineWidth;
vkCmdSetDepthBias : PFN_vkCmdSetDepthBias;
vkCmdSetBlendConstants : PFN_vkCmdSetBlendConstants;
vkCmdSetDepthBounds : PFN_vkCmdSetDepthBounds;
vkCmdSetStencilCompareMask : PFN_vkCmdSetStencilCompareMask;
vkCmdSetStencilWriteMask : PFN_vkCmdSetStencilWriteMask;
vkCmdSetStencilReference : PFN_vkCmdSetStencilReference;
vkCmdBindDescriptorSets : PFN_vkCmdBindDescriptorSets;
vkCmdBindIndexBuffer : PFN_vkCmdBindIndexBuffer;
vkCmdBindVertexBuffers : PFN_vkCmdBindVertexBuffers;
vkCmdDraw : PFN_vkCmdDraw;
vkCmdDrawIndexed : PFN_vkCmdDrawIndexed;
vkCmdDrawMultiEXT : PFN_vkCmdDrawMultiEXT;
vkCmdDrawMultiIndexedEXT : PFN_vkCmdDrawMultiIndexedEXT;
vkCmdDrawIndirect : PFN_vkCmdDrawIndirect;
vkCmdDrawIndexedIndirect : PFN_vkCmdDrawIndexedIndirect;
vkCmdDispatch : PFN_vkCmdDispatch;
vkCmdDispatchIndirect : PFN_vkCmdDispatchIndirect;
vkCmdSubpassShadingHUAWEI : PFN_vkCmdSubpassShadingHUAWEI;
vkCmdDrawClusterHUAWEI : PFN_vkCmdDrawClusterHUAWEI;
vkCmdDrawClusterIndirectHUAWEI : PFN_vkCmdDrawClusterIndirectHUAWEI;
vkCmdUpdatePipelineIndirectBufferNV : PFN_vkCmdUpdatePipelineIndirectBufferNV;
vkCmdCopyBuffer : PFN_vkCmdCopyBuffer;
vkCmdCopyImage : PFN_vkCmdCopyImage;
vkCmdBlitImage : PFN_vkCmdBlitImage;
vkCmdCopyBufferToImage : PFN_vkCmdCopyBufferToImage;
vkCmdCopyImageToBuffer : PFN_vkCmdCopyImageToBuffer;
vkCmdCopyMemoryIndirectNV : PFN_vkCmdCopyMemoryIndirectNV;
vkCmdCopyMemoryToImageIndirectNV : PFN_vkCmdCopyMemoryToImageIndirectNV;
vkCmdUpdateBuffer : PFN_vkCmdUpdateBuffer;
vkCmdFillBuffer : PFN_vkCmdFillBuffer;
vkCmdClearColorImage : PFN_vkCmdClearColorImage;
vkCmdClearDepthStencilImage : PFN_vkCmdClearDepthStencilImage;
vkCmdClearAttachments : PFN_vkCmdClearAttachments;
vkCmdResolveImage : PFN_vkCmdResolveImage;
vkCmdSetEvent : PFN_vkCmdSetEvent;
vkCmdResetEvent : PFN_vkCmdResetEvent;
vkCmdWaitEvents : PFN_vkCmdWaitEvents;
vkCmdPipelineBarrier : PFN_vkCmdPipelineBarrier;
vkCmdBeginQuery : PFN_vkCmdBeginQuery;
vkCmdEndQuery : PFN_vkCmdEndQuery;
vkCmdBeginConditionalRenderingEXT : PFN_vkCmdBeginConditionalRenderingEXT;
vkCmdEndConditionalRenderingEXT : PFN_vkCmdEndConditionalRenderingEXT;
vkCmdResetQueryPool : PFN_vkCmdResetQueryPool;
vkCmdWriteTimestamp : PFN_vkCmdWriteTimestamp;
vkCmdCopyQueryPoolResults : PFN_vkCmdCopyQueryPoolResults;
vkCmdPushConstants : PFN_vkCmdPushConstants;
vkCmdBeginRenderPass : PFN_vkCmdBeginRenderPass;
vkCmdNextSubpass : PFN_vkCmdNextSubpass;
vkCmdEndRenderPass : PFN_vkCmdEndRenderPass;
vkCmdExecuteCommands : PFN_vkCmdExecuteCommands;
vkCreateAndroidSurfaceKHR : PFN_vkCreateAndroidSurfaceKHR;
vkCreateSurfaceOHOS : PFN_vkCreateSurfaceOHOS;
vkGetPhysicalDeviceDisplayPropertiesKHR : PFN_vkGetPhysicalDeviceDisplayPropertiesKHR;
vkGetPhysicalDeviceDisplayPlanePropertiesKHR : PFN_vkGetPhysicalDeviceDisplayPlanePropertiesKHR;
vkGetDisplayPlaneSupportedDisplaysKHR : PFN_vkGetDisplayPlaneSupportedDisplaysKHR;
vkGetDisplayModePropertiesKHR : PFN_vkGetDisplayModePropertiesKHR;
vkCreateDisplayModeKHR : PFN_vkCreateDisplayModeKHR;
vkGetDisplayPlaneCapabilitiesKHR : PFN_vkGetDisplayPlaneCapabilitiesKHR;
vkCreateDisplayPlaneSurfaceKHR : PFN_vkCreateDisplayPlaneSurfaceKHR;
vkCreateSharedSwapchainsKHR : PFN_vkCreateSharedSwapchainsKHR;
vkDestroySurfaceKHR : PFN_vkDestroySurfaceKHR;
vkGetPhysicalDeviceSurfaceSupportKHR : PFN_vkGetPhysicalDeviceSurfaceSupportKHR;
vkGetPhysicalDeviceSurfaceCapabilitiesKHR : PFN_vkGetPhysicalDeviceSurfaceCapabilitiesKHR;
vkGetPhysicalDeviceSurfaceFormatsKHR : PFN_vkGetPhysicalDeviceSurfaceFormatsKHR;
vkGetPhysicalDeviceSurfacePresentModesKHR : PFN_vkGetPhysicalDeviceSurfacePresentModesKHR;
vkCreateSwapchainKHR : PFN_vkCreateSwapchainKHR;
vkDestroySwapchainKHR : PFN_vkDestroySwapchainKHR;
vkGetSwapchainImagesKHR : PFN_vkGetSwapchainImagesKHR;
vkAcquireNextImageKHR : PFN_vkAcquireNextImageKHR;
vkQueuePresentKHR : PFN_vkQueuePresentKHR;
vkCreateViSurfaceNN : PFN_vkCreateViSurfaceNN;
vkCreateWaylandSurfaceKHR : PFN_vkCreateWaylandSurfaceKHR;
vkGetPhysicalDeviceWaylandPresentationSupportKHR : PFN_vkGetPhysicalDeviceWaylandPresentationSupportKHR;
vkCreateWin32SurfaceKHR : PFN_vkCreateWin32SurfaceKHR;
vkGetPhysicalDeviceWin32PresentationSupportKHR : PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR;
vkCreateXlibSurfaceKHR : PFN_vkCreateXlibSurfaceKHR;
vkGetPhysicalDeviceXlibPresentationSupportKHR : PFN_vkGetPhysicalDeviceXlibPresentationSupportKHR;
vkCreateXcbSurfaceKHR : PFN_vkCreateXcbSurfaceKHR;
vkGetPhysicalDeviceXcbPresentationSupportKHR : PFN_vkGetPhysicalDeviceXcbPresentationSupportKHR;
vkCreateDirectFBSurfaceEXT : PFN_vkCreateDirectFBSurfaceEXT;
vkGetPhysicalDeviceDirectFBPresentationSupportEXT : PFN_vkGetPhysicalDeviceDirectFBPresentationSupportEXT;
vkCreateImagePipeSurfaceFUCHSIA : PFN_vkCreateImagePipeSurfaceFUCHSIA;
vkCreateStreamDescriptorSurfaceGGP : PFN_vkCreateStreamDescriptorSurfaceGGP;
vkCreateScreenSurfaceQNX : PFN_vkCreateScreenSurfaceQNX;
vkGetPhysicalDeviceScreenPresentationSupportQNX : PFN_vkGetPhysicalDeviceScreenPresentationSupportQNX;
vkCreateDebugReportCallbackEXT : PFN_vkCreateDebugReportCallbackEXT;
vkDestroyDebugReportCallbackEXT : PFN_vkDestroyDebugReportCallbackEXT;
vkDebugReportMessageEXT : PFN_vkDebugReportMessageEXT;
vkDebugMarkerSetObjectNameEXT : PFN_vkDebugMarkerSetObjectNameEXT;
vkDebugMarkerSetObjectTagEXT : PFN_vkDebugMarkerSetObjectTagEXT;
vkCmdDebugMarkerBeginEXT : PFN_vkCmdDebugMarkerBeginEXT;
vkCmdDebugMarkerEndEXT : PFN_vkCmdDebugMarkerEndEXT;
vkCmdDebugMarkerInsertEXT : PFN_vkCmdDebugMarkerInsertEXT;
vkGetPhysicalDeviceExternalImageFormatPropertiesNV : PFN_vkGetPhysicalDeviceExternalImageFormatPropertiesNV;
vkGetMemoryWin32HandleNV : PFN_vkGetMemoryWin32HandleNV;
vkCmdExecuteGeneratedCommandsNV : PFN_vkCmdExecuteGeneratedCommandsNV;
vkCmdPreprocessGeneratedCommandsNV : PFN_vkCmdPreprocessGeneratedCommandsNV;
vkCmdBindPipelineShaderGroupNV : PFN_vkCmdBindPipelineShaderGroupNV;
vkGetGeneratedCommandsMemoryRequirementsNV : PFN_vkGetGeneratedCommandsMemoryRequirementsNV;
vkCreateIndirectCommandsLayoutNV : PFN_vkCreateIndirectCommandsLayoutNV;
vkDestroyIndirectCommandsLayoutNV : PFN_vkDestroyIndirectCommandsLayoutNV;
vkCmdExecuteGeneratedCommandsEXT : PFN_vkCmdExecuteGeneratedCommandsEXT;
vkCmdPreprocessGeneratedCommandsEXT : PFN_vkCmdPreprocessGeneratedCommandsEXT;
vkGetGeneratedCommandsMemoryRequirementsEXT : PFN_vkGetGeneratedCommandsMemoryRequirementsEXT;
vkCreateIndirectCommandsLayoutEXT : PFN_vkCreateIndirectCommandsLayoutEXT;
vkDestroyIndirectCommandsLayoutEXT : PFN_vkDestroyIndirectCommandsLayoutEXT;
vkCreateIndirectExecutionSetEXT : PFN_vkCreateIndirectExecutionSetEXT;
vkDestroyIndirectExecutionSetEXT : PFN_vkDestroyIndirectExecutionSetEXT;
vkUpdateIndirectExecutionSetPipelineEXT : PFN_vkUpdateIndirectExecutionSetPipelineEXT;
vkUpdateIndirectExecutionSetShaderEXT : PFN_vkUpdateIndirectExecutionSetShaderEXT;
vkGetPhysicalDeviceFeatures2 : PFN_vkGetPhysicalDeviceFeatures2;
vkGetPhysicalDeviceFeatures2KHR : PFN_vkGetPhysicalDeviceFeatures2KHR;
vkGetPhysicalDeviceProperties2 : PFN_vkGetPhysicalDeviceProperties2;
vkGetPhysicalDeviceProperties2KHR : PFN_vkGetPhysicalDeviceProperties2KHR;
vkGetPhysicalDeviceFormatProperties2 : PFN_vkGetPhysicalDeviceFormatProperties2;
vkGetPhysicalDeviceFormatProperties2KHR : PFN_vkGetPhysicalDeviceFormatProperties2KHR;
vkGetPhysicalDeviceImageFormatProperties2 : PFN_vkGetPhysicalDeviceImageFormatProperties2;
vkGetPhysicalDeviceImageFormatProperties2KHR : PFN_vkGetPhysicalDeviceImageFormatProperties2KHR;
vkGetPhysicalDeviceQueueFamilyProperties2 : PFN_vkGetPhysicalDeviceQueueFamilyProperties2;
vkGetPhysicalDeviceQueueFamilyProperties2KHR : PFN_vkGetPhysicalDeviceQueueFamilyProperties2KHR;
vkGetPhysicalDeviceMemoryProperties2 : PFN_vkGetPhysicalDeviceMemoryProperties2;
vkGetPhysicalDeviceMemoryProperties2KHR : PFN_vkGetPhysicalDeviceMemoryProperties2KHR;
vkGetPhysicalDeviceSparseImageFormatProperties2 : PFN_vkGetPhysicalDeviceSparseImageFormatProperties2;
vkGetPhysicalDeviceSparseImageFormatProperties2KHR : PFN_vkGetPhysicalDeviceSparseImageFormatProperties2KHR;
vkCmdPushDescriptorSet : PFN_vkCmdPushDescriptorSet;
vkCmdPushDescriptorSetKHR : PFN_vkCmdPushDescriptorSetKHR;
vkTrimCommandPool : PFN_vkTrimCommandPool;
vkTrimCommandPoolKHR : PFN_vkTrimCommandPoolKHR;
vkGetPhysicalDeviceExternalBufferProperties : PFN_vkGetPhysicalDeviceExternalBufferProperties;
vkGetPhysicalDeviceExternalBufferPropertiesKHR : PFN_vkGetPhysicalDeviceExternalBufferPropertiesKHR;
vkGetMemoryWin32HandleKHR : PFN_vkGetMemoryWin32HandleKHR;
vkGetMemoryWin32HandlePropertiesKHR : PFN_vkGetMemoryWin32HandlePropertiesKHR;
vkGetMemoryFdKHR : PFN_vkGetMemoryFdKHR;
vkGetMemoryFdPropertiesKHR : PFN_vkGetMemoryFdPropertiesKHR;
vkGetMemoryZirconHandleFUCHSIA : PFN_vkGetMemoryZirconHandleFUCHSIA;
vkGetMemoryZirconHandlePropertiesFUCHSIA : PFN_vkGetMemoryZirconHandlePropertiesFUCHSIA;
vkGetMemoryRemoteAddressNV : PFN_vkGetMemoryRemoteAddressNV;
vkGetMemorySciBufNV : PFN_vkGetMemorySciBufNV;
vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV : PFN_vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV;
vkGetPhysicalDeviceSciBufAttributesNV : PFN_vkGetPhysicalDeviceSciBufAttributesNV;
vkGetPhysicalDeviceExternalSemaphoreProperties : PFN_vkGetPhysicalDeviceExternalSemaphoreProperties;
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR : PFN_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR;
vkGetSemaphoreWin32HandleKHR : PFN_vkGetSemaphoreWin32HandleKHR;
vkImportSemaphoreWin32HandleKHR : PFN_vkImportSemaphoreWin32HandleKHR;
vkGetSemaphoreFdKHR : PFN_vkGetSemaphoreFdKHR;
vkImportSemaphoreFdKHR : PFN_vkImportSemaphoreFdKHR;
vkGetSemaphoreZirconHandleFUCHSIA : PFN_vkGetSemaphoreZirconHandleFUCHSIA;
vkImportSemaphoreZirconHandleFUCHSIA : PFN_vkImportSemaphoreZirconHandleFUCHSIA;
vkGetPhysicalDeviceExternalFenceProperties : PFN_vkGetPhysicalDeviceExternalFenceProperties;
vkGetPhysicalDeviceExternalFencePropertiesKHR : PFN_vkGetPhysicalDeviceExternalFencePropertiesKHR;
vkGetFenceWin32HandleKHR : PFN_vkGetFenceWin32HandleKHR;
vkImportFenceWin32HandleKHR : PFN_vkImportFenceWin32HandleKHR;
vkGetFenceFdKHR : PFN_vkGetFenceFdKHR;
vkImportFenceFdKHR : PFN_vkImportFenceFdKHR;
vkGetFenceSciSyncFenceNV : PFN_vkGetFenceSciSyncFenceNV;
vkGetFenceSciSyncObjNV : PFN_vkGetFenceSciSyncObjNV;
vkImportFenceSciSyncFenceNV : PFN_vkImportFenceSciSyncFenceNV;
vkImportFenceSciSyncObjNV : PFN_vkImportFenceSciSyncObjNV;
vkGetSemaphoreSciSyncObjNV : PFN_vkGetSemaphoreSciSyncObjNV;
vkImportSemaphoreSciSyncObjNV : PFN_vkImportSemaphoreSciSyncObjNV;
vkGetPhysicalDeviceSciSyncAttributesNV : PFN_vkGetPhysicalDeviceSciSyncAttributesNV;
vkCreateSemaphoreSciSyncPoolNV : PFN_vkCreateSemaphoreSciSyncPoolNV;
vkDestroySemaphoreSciSyncPoolNV : PFN_vkDestroySemaphoreSciSyncPoolNV;
vkReleaseDisplayEXT : PFN_vkReleaseDisplayEXT;
vkAcquireXlibDisplayEXT : PFN_vkAcquireXlibDisplayEXT;
vkGetRandROutputDisplayEXT : PFN_vkGetRandROutputDisplayEXT;
vkAcquireWinrtDisplayNV : PFN_vkAcquireWinrtDisplayNV;
vkGetWinrtDisplayNV : PFN_vkGetWinrtDisplayNV;
vkDisplayPowerControlEXT : PFN_vkDisplayPowerControlEXT;
vkRegisterDeviceEventEXT : PFN_vkRegisterDeviceEventEXT;
vkRegisterDisplayEventEXT : PFN_vkRegisterDisplayEventEXT;
vkGetSwapchainCounterEXT : PFN_vkGetSwapchainCounterEXT;
vkGetPhysicalDeviceSurfaceCapabilities2EXT : PFN_vkGetPhysicalDeviceSurfaceCapabilities2EXT;
vkEnumeratePhysicalDeviceGroups : PFN_vkEnumeratePhysicalDeviceGroups;
vkEnumeratePhysicalDeviceGroupsKHR : PFN_vkEnumeratePhysicalDeviceGroupsKHR;
vkGetDeviceGroupPeerMemoryFeatures : PFN_vkGetDeviceGroupPeerMemoryFeatures;
vkGetDeviceGroupPeerMemoryFeaturesKHR : PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR;
vkBindBufferMemory2 : PFN_vkBindBufferMemory2;
vkBindBufferMemory2KHR : PFN_vkBindBufferMemory2KHR;
vkBindImageMemory2 : PFN_vkBindImageMemory2;
vkBindImageMemory2KHR : PFN_vkBindImageMemory2KHR;
vkCmdSetDeviceMask : PFN_vkCmdSetDeviceMask;
vkCmdSetDeviceMaskKHR : PFN_vkCmdSetDeviceMaskKHR;
vkGetDeviceGroupPresentCapabilitiesKHR : PFN_vkGetDeviceGroupPresentCapabilitiesKHR;
vkGetDeviceGroupSurfacePresentModesKHR : PFN_vkGetDeviceGroupSurfacePresentModesKHR;
vkAcquireNextImage2KHR : PFN_vkAcquireNextImage2KHR;
vkCmdDispatchBase : PFN_vkCmdDispatchBase;
vkCmdDispatchBaseKHR : PFN_vkCmdDispatchBaseKHR;
vkGetPhysicalDevicePresentRectanglesKHR : PFN_vkGetPhysicalDevicePresentRectanglesKHR;
vkCreateDescriptorUpdateTemplate : PFN_vkCreateDescriptorUpdateTemplate;
vkCreateDescriptorUpdateTemplateKHR : PFN_vkCreateDescriptorUpdateTemplateKHR;
vkDestroyDescriptorUpdateTemplate : PFN_vkDestroyDescriptorUpdateTemplate;
vkDestroyDescriptorUpdateTemplateKHR : PFN_vkDestroyDescriptorUpdateTemplateKHR;
vkUpdateDescriptorSetWithTemplate : PFN_vkUpdateDescriptorSetWithTemplate;
vkUpdateDescriptorSetWithTemplateKHR : PFN_vkUpdateDescriptorSetWithTemplateKHR;
vkCmdPushDescriptorSetWithTemplate : PFN_vkCmdPushDescriptorSetWithTemplate;
vkCmdPushDescriptorSetWithTemplateKHR : PFN_vkCmdPushDescriptorSetWithTemplateKHR;
vkSetHdrMetadataEXT : PFN_vkSetHdrMetadataEXT;
vkGetSwapchainStatusKHR : PFN_vkGetSwapchainStatusKHR;
vkGetRefreshCycleDurationGOOGLE : PFN_vkGetRefreshCycleDurationGOOGLE;
vkGetPastPresentationTimingGOOGLE : PFN_vkGetPastPresentationTimingGOOGLE;
vkCreateIOSSurfaceMVK : PFN_vkCreateIOSSurfaceMVK;
vkCreateMacOSSurfaceMVK : PFN_vkCreateMacOSSurfaceMVK;
vkCreateMetalSurfaceEXT : PFN_vkCreateMetalSurfaceEXT;
vkCmdSetViewportWScalingNV : PFN_vkCmdSetViewportWScalingNV;
vkCmdSetDiscardRectangleEXT : PFN_vkCmdSetDiscardRectangleEXT;
vkCmdSetDiscardRectangleEnableEXT : PFN_vkCmdSetDiscardRectangleEnableEXT;
vkCmdSetDiscardRectangleModeEXT : PFN_vkCmdSetDiscardRectangleModeEXT;
vkCmdSetSampleLocationsEXT : PFN_vkCmdSetSampleLocationsEXT;
vkGetPhysicalDeviceMultisamplePropertiesEXT : PFN_vkGetPhysicalDeviceMultisamplePropertiesEXT;
vkGetPhysicalDeviceSurfaceCapabilities2KHR : PFN_vkGetPhysicalDeviceSurfaceCapabilities2KHR;
vkGetPhysicalDeviceSurfaceFormats2KHR : PFN_vkGetPhysicalDeviceSurfaceFormats2KHR;
vkGetPhysicalDeviceDisplayProperties2KHR : PFN_vkGetPhysicalDeviceDisplayProperties2KHR;
vkGetPhysicalDeviceDisplayPlaneProperties2KHR : PFN_vkGetPhysicalDeviceDisplayPlaneProperties2KHR;
vkGetDisplayModeProperties2KHR : PFN_vkGetDisplayModeProperties2KHR;
vkGetDisplayPlaneCapabilities2KHR : PFN_vkGetDisplayPlaneCapabilities2KHR;
vkGetBufferMemoryRequirements2 : PFN_vkGetBufferMemoryRequirements2;
vkGetBufferMemoryRequirements2KHR : PFN_vkGetBufferMemoryRequirements2KHR;
vkGetImageMemoryRequirements2 : PFN_vkGetImageMemoryRequirements2;
vkGetImageMemoryRequirements2KHR : PFN_vkGetImageMemoryRequirements2KHR;
vkGetImageSparseMemoryRequirements2 : PFN_vkGetImageSparseMemoryRequirements2;
vkGetImageSparseMemoryRequirements2KHR : PFN_vkGetImageSparseMemoryRequirements2KHR;
vkGetDeviceBufferMemoryRequirements : PFN_vkGetDeviceBufferMemoryRequirements;
vkGetDeviceBufferMemoryRequirementsKHR : PFN_vkGetDeviceBufferMemoryRequirementsKHR;
vkGetDeviceImageMemoryRequirements : PFN_vkGetDeviceImageMemoryRequirements;
vkGetDeviceImageMemoryRequirementsKHR : PFN_vkGetDeviceImageMemoryRequirementsKHR;
vkGetDeviceImageSparseMemoryRequirements : PFN_vkGetDeviceImageSparseMemoryRequirements;
vkGetDeviceImageSparseMemoryRequirementsKHR : PFN_vkGetDeviceImageSparseMemoryRequirementsKHR;
vkCreateSamplerYcbcrConversion : PFN_vkCreateSamplerYcbcrConversion;
vkCreateSamplerYcbcrConversionKHR : PFN_vkCreateSamplerYcbcrConversionKHR;
vkDestroySamplerYcbcrConversion : PFN_vkDestroySamplerYcbcrConversion;
vkDestroySamplerYcbcrConversionKHR : PFN_vkDestroySamplerYcbcrConversionKHR;
vkGetDeviceQueue2 : PFN_vkGetDeviceQueue2;
vkCreateValidationCacheEXT : PFN_vkCreateValidationCacheEXT;
vkDestroyValidationCacheEXT : PFN_vkDestroyValidationCacheEXT;
vkGetValidationCacheDataEXT : PFN_vkGetValidationCacheDataEXT;
vkMergeValidationCachesEXT : PFN_vkMergeValidationCachesEXT;
vkGetDescriptorSetLayoutSupport : PFN_vkGetDescriptorSetLayoutSupport;
vkGetDescriptorSetLayoutSupportKHR : PFN_vkGetDescriptorSetLayoutSupportKHR;
vkGetSwapchainGrallocUsageANDROID : PFN_vkGetSwapchainGrallocUsageANDROID;
vkGetSwapchainGrallocUsage2ANDROID : PFN_vkGetSwapchainGrallocUsage2ANDROID;
vkAcquireImageANDROID : PFN_vkAcquireImageANDROID;
vkQueueSignalReleaseImageANDROID : PFN_vkQueueSignalReleaseImageANDROID;
vkGetShaderInfoAMD : PFN_vkGetShaderInfoAMD;
vkSetLocalDimmingAMD : PFN_vkSetLocalDimmingAMD;
vkGetPhysicalDeviceCalibrateableTimeDomainsKHR : PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsKHR;
vkGetPhysicalDeviceCalibrateableTimeDomainsEXT : PFN_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT;
vkGetCalibratedTimestampsKHR : PFN_vkGetCalibratedTimestampsKHR;
vkGetCalibratedTimestampsEXT : PFN_vkGetCalibratedTimestampsEXT;
vkSetDebugUtilsObjectNameEXT : PFN_vkSetDebugUtilsObjectNameEXT;
vkSetDebugUtilsObjectTagEXT : PFN_vkSetDebugUtilsObjectTagEXT;
vkQueueBeginDebugUtilsLabelEXT : PFN_vkQueueBeginDebugUtilsLabelEXT;
vkQueueEndDebugUtilsLabelEXT : PFN_vkQueueEndDebugUtilsLabelEXT;
vkQueueInsertDebugUtilsLabelEXT : PFN_vkQueueInsertDebugUtilsLabelEXT;
vkCmdBeginDebugUtilsLabelEXT : PFN_vkCmdBeginDebugUtilsLabelEXT;
vkCmdEndDebugUtilsLabelEXT : PFN_vkCmdEndDebugUtilsLabelEXT;
vkCmdInsertDebugUtilsLabelEXT : PFN_vkCmdInsertDebugUtilsLabelEXT;
vkCreateDebugUtilsMessengerEXT : PFN_vkCreateDebugUtilsMessengerEXT;
vkDestroyDebugUtilsMessengerEXT : PFN_vkDestroyDebugUtilsMessengerEXT;
vkSubmitDebugUtilsMessageEXT : PFN_vkSubmitDebugUtilsMessageEXT;
vkGetMemoryHostPointerPropertiesEXT : PFN_vkGetMemoryHostPointerPropertiesEXT;
vkCmdWriteBufferMarkerAMD : PFN_vkCmdWriteBufferMarkerAMD;
vkCreateRenderPass2 : PFN_vkCreateRenderPass2;
vkCreateRenderPass2KHR : PFN_vkCreateRenderPass2KHR;
vkCmdBeginRenderPass2 : PFN_vkCmdBeginRenderPass2;
vkCmdBeginRenderPass2KHR : PFN_vkCmdBeginRenderPass2KHR;
vkCmdNextSubpass2 : PFN_vkCmdNextSubpass2;
vkCmdNextSubpass2KHR : PFN_vkCmdNextSubpass2KHR;
vkCmdEndRenderPass2 : PFN_vkCmdEndRenderPass2;
vkCmdEndRenderPass2KHR : PFN_vkCmdEndRenderPass2KHR;
vkGetSemaphoreCounterValue : PFN_vkGetSemaphoreCounterValue;
vkGetSemaphoreCounterValueKHR : PFN_vkGetSemaphoreCounterValueKHR;
vkWaitSemaphores : PFN_vkWaitSemaphores;
vkWaitSemaphoresKHR : PFN_vkWaitSemaphoresKHR;
vkSignalSemaphore : PFN_vkSignalSemaphore;
vkSignalSemaphoreKHR : PFN_vkSignalSemaphoreKHR;
vkGetAndroidHardwareBufferPropertiesANDROID : PFN_vkGetAndroidHardwareBufferPropertiesANDROID;
vkGetMemoryAndroidHardwareBufferANDROID : PFN_vkGetMemoryAndroidHardwareBufferANDROID;
vkCmdDrawIndirectCount : PFN_vkCmdDrawIndirectCount;
vkCmdDrawIndirectCountKHR : PFN_vkCmdDrawIndirectCountKHR;
vkCmdDrawIndirectCountAMD : PFN_vkCmdDrawIndirectCountAMD;
vkCmdDrawIndexedIndirectCount : PFN_vkCmdDrawIndexedIndirectCount;
vkCmdDrawIndexedIndirectCountKHR : PFN_vkCmdDrawIndexedIndirectCountKHR;
vkCmdDrawIndexedIndirectCountAMD : PFN_vkCmdDrawIndexedIndirectCountAMD;
vkCmdSetCheckpointNV : PFN_vkCmdSetCheckpointNV;
vkGetQueueCheckpointDataNV : PFN_vkGetQueueCheckpointDataNV;
vkCmdBindTransformFeedbackBuffersEXT : PFN_vkCmdBindTransformFeedbackBuffersEXT;
vkCmdBeginTransformFeedbackEXT : PFN_vkCmdBeginTransformFeedbackEXT;
vkCmdEndTransformFeedbackEXT : PFN_vkCmdEndTransformFeedbackEXT;
vkCmdBeginQueryIndexedEXT : PFN_vkCmdBeginQueryIndexedEXT;
vkCmdEndQueryIndexedEXT : PFN_vkCmdEndQueryIndexedEXT;
vkCmdDrawIndirectByteCountEXT : PFN_vkCmdDrawIndirectByteCountEXT;
vkCmdSetExclusiveScissorNV : PFN_vkCmdSetExclusiveScissorNV;
vkCmdSetExclusiveScissorEnableNV : PFN_vkCmdSetExclusiveScissorEnableNV;
vkCmdBindShadingRateImageNV : PFN_vkCmdBindShadingRateImageNV;
vkCmdSetViewportShadingRatePaletteNV : PFN_vkCmdSetViewportShadingRatePaletteNV;
vkCmdSetCoarseSampleOrderNV : PFN_vkCmdSetCoarseSampleOrderNV;
vkCmdDrawMeshTasksNV : PFN_vkCmdDrawMeshTasksNV;
vkCmdDrawMeshTasksIndirectNV : PFN_vkCmdDrawMeshTasksIndirectNV;
vkCmdDrawMeshTasksIndirectCountNV : PFN_vkCmdDrawMeshTasksIndirectCountNV;
vkCmdDrawMeshTasksEXT : PFN_vkCmdDrawMeshTasksEXT;
vkCmdDrawMeshTasksIndirectEXT : PFN_vkCmdDrawMeshTasksIndirectEXT;
vkCmdDrawMeshTasksIndirectCountEXT : PFN_vkCmdDrawMeshTasksIndirectCountEXT;
vkCompileDeferredNV : PFN_vkCompileDeferredNV;
vkCreateAccelerationStructureNV : PFN_vkCreateAccelerationStructureNV;
vkCmdBindInvocationMaskHUAWEI : PFN_vkCmdBindInvocationMaskHUAWEI;
vkDestroyAccelerationStructureKHR : PFN_vkDestroyAccelerationStructureKHR;
vkDestroyAccelerationStructureNV : PFN_vkDestroyAccelerationStructureNV;
vkGetAccelerationStructureMemoryRequirementsNV : PFN_vkGetAccelerationStructureMemoryRequirementsNV;
vkBindAccelerationStructureMemoryNV : PFN_vkBindAccelerationStructureMemoryNV;
vkCmdCopyAccelerationStructureNV : PFN_vkCmdCopyAccelerationStructureNV;
vkCmdCopyAccelerationStructureKHR : PFN_vkCmdCopyAccelerationStructureKHR;
vkCopyAccelerationStructureKHR : PFN_vkCopyAccelerationStructureKHR;
vkCmdCopyAccelerationStructureToMemoryKHR : PFN_vkCmdCopyAccelerationStructureToMemoryKHR;
vkCopyAccelerationStructureToMemoryKHR : PFN_vkCopyAccelerationStructureToMemoryKHR;
vkCmdCopyMemoryToAccelerationStructureKHR : PFN_vkCmdCopyMemoryToAccelerationStructureKHR;
vkCopyMemoryToAccelerationStructureKHR : PFN_vkCopyMemoryToAccelerationStructureKHR;
vkCmdWriteAccelerationStructuresPropertiesKHR : PFN_vkCmdWriteAccelerationStructuresPropertiesKHR;
vkCmdWriteAccelerationStructuresPropertiesNV : PFN_vkCmdWriteAccelerationStructuresPropertiesNV;
vkCmdBuildAccelerationStructureNV : PFN_vkCmdBuildAccelerationStructureNV;
vkWriteAccelerationStructuresPropertiesKHR : PFN_vkWriteAccelerationStructuresPropertiesKHR;
vkCmdTraceRaysKHR : PFN_vkCmdTraceRaysKHR;
vkCmdTraceRaysNV : PFN_vkCmdTraceRaysNV;
vkGetRayTracingShaderGroupHandlesKHR : PFN_vkGetRayTracingShaderGroupHandlesKHR;
vkGetRayTracingShaderGroupHandlesNV : PFN_vkGetRayTracingShaderGroupHandlesNV;
vkGetRayTracingCaptureReplayShaderGroupHandlesKHR : PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR;
vkGetAccelerationStructureHandleNV : PFN_vkGetAccelerationStructureHandleNV;
vkCreateRayTracingPipelinesNV : PFN_vkCreateRayTracingPipelinesNV;
vkCreateRayTracingPipelinesKHR : PFN_vkCreateRayTracingPipelinesKHR;
vkGetPhysicalDeviceCooperativeMatrixPropertiesNV : PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV;
vkCmdTraceRaysIndirectKHR : PFN_vkCmdTraceRaysIndirectKHR;
vkCmdTraceRaysIndirect2KHR : PFN_vkCmdTraceRaysIndirect2KHR;
vkGetClusterAccelerationStructureBuildSizesNV : PFN_vkGetClusterAccelerationStructureBuildSizesNV;
vkCmdBuildClusterAccelerationStructureIndirectNV : PFN_vkCmdBuildClusterAccelerationStructureIndirectNV;
vkGetDeviceAccelerationStructureCompatibilityKHR : PFN_vkGetDeviceAccelerationStructureCompatibilityKHR;
vkGetRayTracingShaderGroupStackSizeKHR : PFN_vkGetRayTracingShaderGroupStackSizeKHR;
vkCmdSetRayTracingPipelineStackSizeKHR : PFN_vkCmdSetRayTracingPipelineStackSizeKHR;
vkGetImageViewHandleNVX : PFN_vkGetImageViewHandleNVX;
vkGetImageViewHandle64NVX : PFN_vkGetImageViewHandle64NVX;
vkGetImageViewAddressNVX : PFN_vkGetImageViewAddressNVX;
vkGetPhysicalDeviceSurfacePresentModes2EXT : PFN_vkGetPhysicalDeviceSurfacePresentModes2EXT;
vkGetDeviceGroupSurfacePresentModes2EXT : PFN_vkGetDeviceGroupSurfacePresentModes2EXT;
vkAcquireFullScreenExclusiveModeEXT : PFN_vkAcquireFullScreenExclusiveModeEXT;
vkReleaseFullScreenExclusiveModeEXT : PFN_vkReleaseFullScreenExclusiveModeEXT;
vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR : PFN_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR;
vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR : PFN_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR;
vkAcquireProfilingLockKHR : PFN_vkAcquireProfilingLockKHR;
vkReleaseProfilingLockKHR : PFN_vkReleaseProfilingLockKHR;
vkGetImageDrmFormatModifierPropertiesEXT : PFN_vkGetImageDrmFormatModifierPropertiesEXT;
vkGetBufferOpaqueCaptureAddress : PFN_vkGetBufferOpaqueCaptureAddress;
vkGetBufferOpaqueCaptureAddressKHR : PFN_vkGetBufferOpaqueCaptureAddressKHR;
vkGetBufferDeviceAddress : PFN_vkGetBufferDeviceAddress;
vkGetBufferDeviceAddressKHR : PFN_vkGetBufferDeviceAddressKHR;
vkGetBufferDeviceAddressEXT : PFN_vkGetBufferDeviceAddressEXT;
vkCreateHeadlessSurfaceEXT : PFN_vkCreateHeadlessSurfaceEXT;
vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV : PFN_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV;
vkInitializePerformanceApiINTEL : PFN_vkInitializePerformanceApiINTEL;
vkUninitializePerformanceApiINTEL : PFN_vkUninitializePerformanceApiINTEL;
vkCmdSetPerformanceMarkerINTEL : PFN_vkCmdSetPerformanceMarkerINTEL;
vkCmdSetPerformanceStreamMarkerINTEL : PFN_vkCmdSetPerformanceStreamMarkerINTEL;
vkCmdSetPerformanceOverrideINTEL : PFN_vkCmdSetPerformanceOverrideINTEL;
vkAcquirePerformanceConfigurationINTEL : PFN_vkAcquirePerformanceConfigurationINTEL;
vkReleasePerformanceConfigurationINTEL : PFN_vkReleasePerformanceConfigurationINTEL;
vkQueueSetPerformanceConfigurationINTEL : PFN_vkQueueSetPerformanceConfigurationINTEL;
vkGetPerformanceParameterINTEL : PFN_vkGetPerformanceParameterINTEL;
vkGetDeviceMemoryOpaqueCaptureAddress : PFN_vkGetDeviceMemoryOpaqueCaptureAddress;
vkGetDeviceMemoryOpaqueCaptureAddressKHR : PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR;
vkGetPipelineExecutablePropertiesKHR : PFN_vkGetPipelineExecutablePropertiesKHR;
vkGetPipelineExecutableStatisticsKHR : PFN_vkGetPipelineExecutableStatisticsKHR;
vkGetPipelineExecutableInternalRepresentationsKHR : PFN_vkGetPipelineExecutableInternalRepresentationsKHR;
vkCmdSetLineStipple : PFN_vkCmdSetLineStipple;
vkCmdSetLineStippleKHR : PFN_vkCmdSetLineStippleKHR;
vkCmdSetLineStippleEXT : PFN_vkCmdSetLineStippleEXT;
vkGetFaultData : PFN_vkGetFaultData;
vkGetPhysicalDeviceToolProperties : PFN_vkGetPhysicalDeviceToolProperties;
vkGetPhysicalDeviceToolPropertiesEXT : PFN_vkGetPhysicalDeviceToolPropertiesEXT;
vkCreateAccelerationStructureKHR : PFN_vkCreateAccelerationStructureKHR;
vkCmdBuildAccelerationStructuresKHR : PFN_vkCmdBuildAccelerationStructuresKHR;
vkCmdBuildAccelerationStructuresIndirectKHR : PFN_vkCmdBuildAccelerationStructuresIndirectKHR;
vkBuildAccelerationStructuresKHR : PFN_vkBuildAccelerationStructuresKHR;
vkGetAccelerationStructureDeviceAddressKHR : PFN_vkGetAccelerationStructureDeviceAddressKHR;
vkCreateDeferredOperationKHR : PFN_vkCreateDeferredOperationKHR;
vkDestroyDeferredOperationKHR : PFN_vkDestroyDeferredOperationKHR;
vkGetDeferredOperationMaxConcurrencyKHR : PFN_vkGetDeferredOperationMaxConcurrencyKHR;
vkGetDeferredOperationResultKHR : PFN_vkGetDeferredOperationResultKHR;
vkDeferredOperationJoinKHR : PFN_vkDeferredOperationJoinKHR;
vkGetPipelineIndirectMemoryRequirementsNV : PFN_vkGetPipelineIndirectMemoryRequirementsNV;
vkGetPipelineIndirectDeviceAddressNV : PFN_vkGetPipelineIndirectDeviceAddressNV;
vkAntiLagUpdateAMD : PFN_vkAntiLagUpdateAMD;
vkCmdSetCullMode : PFN_vkCmdSetCullMode;
vkCmdSetCullModeEXT : PFN_vkCmdSetCullModeEXT;
vkCmdSetFrontFace : PFN_vkCmdSetFrontFace;
vkCmdSetFrontFaceEXT : PFN_vkCmdSetFrontFaceEXT;
vkCmdSetPrimitiveTopology : PFN_vkCmdSetPrimitiveTopology;
vkCmdSetPrimitiveTopologyEXT : PFN_vkCmdSetPrimitiveTopologyEXT;
vkCmdSetViewportWithCount : PFN_vkCmdSetViewportWithCount;
vkCmdSetViewportWithCountEXT : PFN_vkCmdSetViewportWithCountEXT;
vkCmdSetScissorWithCount : PFN_vkCmdSetScissorWithCount;
vkCmdSetScissorWithCountEXT : PFN_vkCmdSetScissorWithCountEXT;
vkCmdBindIndexBuffer2 : PFN_vkCmdBindIndexBuffer2;
vkCmdBindIndexBuffer2KHR : PFN_vkCmdBindIndexBuffer2KHR;
vkCmdBindVertexBuffers2 : PFN_vkCmdBindVertexBuffers2;
vkCmdBindVertexBuffers2EXT : PFN_vkCmdBindVertexBuffers2EXT;
vkCmdSetDepthTestEnable : PFN_vkCmdSetDepthTestEnable;
vkCmdSetDepthTestEnableEXT : PFN_vkCmdSetDepthTestEnableEXT;
vkCmdSetDepthWriteEnable : PFN_vkCmdSetDepthWriteEnable;
vkCmdSetDepthWriteEnableEXT : PFN_vkCmdSetDepthWriteEnableEXT;
vkCmdSetDepthCompareOp : PFN_vkCmdSetDepthCompareOp;
vkCmdSetDepthCompareOpEXT : PFN_vkCmdSetDepthCompareOpEXT;
vkCmdSetDepthBoundsTestEnable : PFN_vkCmdSetDepthBoundsTestEnable;
vkCmdSetDepthBoundsTestEnableEXT : PFN_vkCmdSetDepthBoundsTestEnableEXT;
vkCmdSetStencilTestEnable : PFN_vkCmdSetStencilTestEnable;
vkCmdSetStencilTestEnableEXT : PFN_vkCmdSetStencilTestEnableEXT;
vkCmdSetStencilOp : PFN_vkCmdSetStencilOp;
vkCmdSetStencilOpEXT : PFN_vkCmdSetStencilOpEXT;
vkCmdSetPatchControlPointsEXT : PFN_vkCmdSetPatchControlPointsEXT;
vkCmdSetRasterizerDiscardEnable : PFN_vkCmdSetRasterizerDiscardEnable;
vkCmdSetRasterizerDiscardEnableEXT : PFN_vkCmdSetRasterizerDiscardEnableEXT;
vkCmdSetDepthBiasEnable : PFN_vkCmdSetDepthBiasEnable;
vkCmdSetDepthBiasEnableEXT : PFN_vkCmdSetDepthBiasEnableEXT;
vkCmdSetLogicOpEXT : PFN_vkCmdSetLogicOpEXT;
vkCmdSetPrimitiveRestartEnable : PFN_vkCmdSetPrimitiveRestartEnable;
vkCmdSetPrimitiveRestartEnableEXT : PFN_vkCmdSetPrimitiveRestartEnableEXT;
vkCmdSetTessellationDomainOriginEXT : PFN_vkCmdSetTessellationDomainOriginEXT;
vkCmdSetDepthClampEnableEXT : PFN_vkCmdSetDepthClampEnableEXT;
vkCmdSetPolygonModeEXT : PFN_vkCmdSetPolygonModeEXT;
vkCmdSetRasterizationSamplesEXT : PFN_vkCmdSetRasterizationSamplesEXT;
vkCmdSetSampleMaskEXT : PFN_vkCmdSetSampleMaskEXT;
vkCmdSetAlphaToCoverageEnableEXT : PFN_vkCmdSetAlphaToCoverageEnableEXT;
vkCmdSetAlphaToOneEnableEXT : PFN_vkCmdSetAlphaToOneEnableEXT;
vkCmdSetLogicOpEnableEXT : PFN_vkCmdSetLogicOpEnableEXT;
vkCmdSetColorBlendEnableEXT : PFN_vkCmdSetColorBlendEnableEXT;
vkCmdSetColorBlendEquationEXT : PFN_vkCmdSetColorBlendEquationEXT;
vkCmdSetColorWriteMaskEXT : PFN_vkCmdSetColorWriteMaskEXT;
vkCmdSetRasterizationStreamEXT : PFN_vkCmdSetRasterizationStreamEXT;
vkCmdSetConservativeRasterizationModeEXT : PFN_vkCmdSetConservativeRasterizationModeEXT;
vkCmdSetExtraPrimitiveOverestimationSizeEXT : PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT;
vkCmdSetDepthClipEnableEXT : PFN_vkCmdSetDepthClipEnableEXT;
vkCmdSetSampleLocationsEnableEXT : PFN_vkCmdSetSampleLocationsEnableEXT;
vkCmdSetColorBlendAdvancedEXT : PFN_vkCmdSetColorBlendAdvancedEXT;
vkCmdSetProvokingVertexModeEXT : PFN_vkCmdSetProvokingVertexModeEXT;
vkCmdSetLineRasterizationModeEXT : PFN_vkCmdSetLineRasterizationModeEXT;
vkCmdSetLineStippleEnableEXT : PFN_vkCmdSetLineStippleEnableEXT;
vkCmdSetDepthClipNegativeOneToOneEXT : PFN_vkCmdSetDepthClipNegativeOneToOneEXT;
vkCmdSetViewportWScalingEnableNV : PFN_vkCmdSetViewportWScalingEnableNV;
vkCmdSetViewportSwizzleNV : PFN_vkCmdSetViewportSwizzleNV;
vkCmdSetCoverageToColorEnableNV : PFN_vkCmdSetCoverageToColorEnableNV;
vkCmdSetCoverageToColorLocationNV : PFN_vkCmdSetCoverageToColorLocationNV;
vkCmdSetCoverageModulationModeNV : PFN_vkCmdSetCoverageModulationModeNV;
vkCmdSetCoverageModulationTableEnableNV : PFN_vkCmdSetCoverageModulationTableEnableNV;
vkCmdSetCoverageModulationTableNV : PFN_vkCmdSetCoverageModulationTableNV;
vkCmdSetShadingRateImageEnableNV : PFN_vkCmdSetShadingRateImageEnableNV;
vkCmdSetCoverageReductionModeNV : PFN_vkCmdSetCoverageReductionModeNV;
vkCmdSetRepresentativeFragmentTestEnableNV : PFN_vkCmdSetRepresentativeFragmentTestEnableNV;
vkCreatePrivateDataSlot : PFN_vkCreatePrivateDataSlot;
vkCreatePrivateDataSlotEXT : PFN_vkCreatePrivateDataSlotEXT;
vkDestroyPrivateDataSlot : PFN_vkDestroyPrivateDataSlot;
vkDestroyPrivateDataSlotEXT : PFN_vkDestroyPrivateDataSlotEXT;
vkSetPrivateData : PFN_vkSetPrivateData;
vkSetPrivateDataEXT : PFN_vkSetPrivateDataEXT;
vkGetPrivateData : PFN_vkGetPrivateData;
vkGetPrivateDataEXT : PFN_vkGetPrivateDataEXT;
vkCmdCopyBuffer2 : PFN_vkCmdCopyBuffer2;
vkCmdCopyBuffer2KHR : PFN_vkCmdCopyBuffer2KHR;
vkCmdCopyImage2 : PFN_vkCmdCopyImage2;
vkCmdCopyImage2KHR : PFN_vkCmdCopyImage2KHR;
vkCmdBlitImage2 : PFN_vkCmdBlitImage2;
vkCmdBlitImage2KHR : PFN_vkCmdBlitImage2KHR;
vkCmdCopyBufferToImage2 : PFN_vkCmdCopyBufferToImage2;
vkCmdCopyBufferToImage2KHR : PFN_vkCmdCopyBufferToImage2KHR;
vkCmdCopyImageToBuffer2 : PFN_vkCmdCopyImageToBuffer2;
vkCmdCopyImageToBuffer2KHR : PFN_vkCmdCopyImageToBuffer2KHR;
vkCmdResolveImage2 : PFN_vkCmdResolveImage2;
vkCmdResolveImage2KHR : PFN_vkCmdResolveImage2KHR;
vkCmdRefreshObjectsKHR : PFN_vkCmdRefreshObjectsKHR;
vkGetPhysicalDeviceRefreshableObjectTypesKHR : PFN_vkGetPhysicalDeviceRefreshableObjectTypesKHR;
vkCmdSetFragmentShadingRateKHR : PFN_vkCmdSetFragmentShadingRateKHR;
vkGetPhysicalDeviceFragmentShadingRatesKHR : PFN_vkGetPhysicalDeviceFragmentShadingRatesKHR;
vkCmdSetFragmentShadingRateEnumNV : PFN_vkCmdSetFragmentShadingRateEnumNV;
vkGetAccelerationStructureBuildSizesKHR : PFN_vkGetAccelerationStructureBuildSizesKHR;
vkCmdSetVertexInputEXT : PFN_vkCmdSetVertexInputEXT;
vkCmdSetColorWriteEnableEXT : PFN_vkCmdSetColorWriteEnableEXT;
vkCmdSetEvent2 : PFN_vkCmdSetEvent2;
vkCmdSetEvent2KHR : PFN_vkCmdSetEvent2KHR;
vkCmdResetEvent2 : PFN_vkCmdResetEvent2;
vkCmdResetEvent2KHR : PFN_vkCmdResetEvent2KHR;
vkCmdWaitEvents2 : PFN_vkCmdWaitEvents2;
vkCmdWaitEvents2KHR : PFN_vkCmdWaitEvents2KHR;
vkCmdPipelineBarrier2 : PFN_vkCmdPipelineBarrier2;
vkCmdPipelineBarrier2KHR : PFN_vkCmdPipelineBarrier2KHR;
vkQueueSubmit2 : PFN_vkQueueSubmit2;
vkQueueSubmit2KHR : PFN_vkQueueSubmit2KHR;
vkCmdWriteTimestamp2 : PFN_vkCmdWriteTimestamp2;
vkCmdWriteTimestamp2KHR : PFN_vkCmdWriteTimestamp2KHR;
vkCmdWriteBufferMarker2AMD : PFN_vkCmdWriteBufferMarker2AMD;
vkGetQueueCheckpointData2NV : PFN_vkGetQueueCheckpointData2NV;
vkCopyMemoryToImage : PFN_vkCopyMemoryToImage;
vkCopyMemoryToImageEXT : PFN_vkCopyMemoryToImageEXT;
vkCopyImageToMemory : PFN_vkCopyImageToMemory;
vkCopyImageToMemoryEXT : PFN_vkCopyImageToMemoryEXT;
vkCopyImageToImage : PFN_vkCopyImageToImage;
vkCopyImageToImageEXT : PFN_vkCopyImageToImageEXT;
vkTransitionImageLayout : PFN_vkTransitionImageLayout;
vkTransitionImageLayoutEXT : PFN_vkTransitionImageLayoutEXT;
vkGetCommandPoolMemoryConsumption : PFN_vkGetCommandPoolMemoryConsumption;
vkGetPhysicalDeviceVideoCapabilitiesKHR : PFN_vkGetPhysicalDeviceVideoCapabilitiesKHR;
vkGetPhysicalDeviceVideoFormatPropertiesKHR : PFN_vkGetPhysicalDeviceVideoFormatPropertiesKHR;
vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR : PFN_vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR;
vkCreateVideoSessionKHR : PFN_vkCreateVideoSessionKHR;
vkDestroyVideoSessionKHR : PFN_vkDestroyVideoSessionKHR;
vkCreateVideoSessionParametersKHR : PFN_vkCreateVideoSessionParametersKHR;
vkUpdateVideoSessionParametersKHR : PFN_vkUpdateVideoSessionParametersKHR;
vkGetEncodedVideoSessionParametersKHR : PFN_vkGetEncodedVideoSessionParametersKHR;
vkDestroyVideoSessionParametersKHR : PFN_vkDestroyVideoSessionParametersKHR;
vkGetVideoSessionMemoryRequirementsKHR : PFN_vkGetVideoSessionMemoryRequirementsKHR;
vkBindVideoSessionMemoryKHR : PFN_vkBindVideoSessionMemoryKHR;
vkCmdDecodeVideoKHR : PFN_vkCmdDecodeVideoKHR;
vkCmdBeginVideoCodingKHR : PFN_vkCmdBeginVideoCodingKHR;
vkCmdControlVideoCodingKHR : PFN_vkCmdControlVideoCodingKHR;
vkCmdEndVideoCodingKHR : PFN_vkCmdEndVideoCodingKHR;
vkCmdEncodeVideoKHR : PFN_vkCmdEncodeVideoKHR;
vkCmdDecompressMemoryNV : PFN_vkCmdDecompressMemoryNV;
vkCmdDecompressMemoryIndirectCountNV : PFN_vkCmdDecompressMemoryIndirectCountNV;
vkGetPartitionedAccelerationStructuresBuildSizesNV : PFN_vkGetPartitionedAccelerationStructuresBuildSizesNV;
vkCmdBuildPartitionedAccelerationStructuresNV : PFN_vkCmdBuildPartitionedAccelerationStructuresNV;
vkCreateCuModuleNVX : PFN_vkCreateCuModuleNVX;
vkCreateCuFunctionNVX : PFN_vkCreateCuFunctionNVX;
vkDestroyCuModuleNVX : PFN_vkDestroyCuModuleNVX;
vkDestroyCuFunctionNVX : PFN_vkDestroyCuFunctionNVX;
vkCmdCuLaunchKernelNVX : PFN_vkCmdCuLaunchKernelNVX;
vkGetDescriptorSetLayoutSizeEXT : PFN_vkGetDescriptorSetLayoutSizeEXT;
vkGetDescriptorSetLayoutBindingOffsetEXT : PFN_vkGetDescriptorSetLayoutBindingOffsetEXT;
vkGetDescriptorEXT : PFN_vkGetDescriptorEXT;
vkCmdBindDescriptorBuffersEXT : PFN_vkCmdBindDescriptorBuffersEXT;
vkCmdSetDescriptorBufferOffsetsEXT : PFN_vkCmdSetDescriptorBufferOffsetsEXT;
vkCmdBindDescriptorBufferEmbeddedSamplersEXT : PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT;
vkGetBufferOpaqueCaptureDescriptorDataEXT : PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT;
vkGetImageOpaqueCaptureDescriptorDataEXT : PFN_vkGetImageOpaqueCaptureDescriptorDataEXT;
vkGetImageViewOpaqueCaptureDescriptorDataEXT : PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT;
vkGetSamplerOpaqueCaptureDescriptorDataEXT : PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT;
vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT : PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT;
vkSetDeviceMemoryPriorityEXT : PFN_vkSetDeviceMemoryPriorityEXT;
vkAcquireDrmDisplayEXT : PFN_vkAcquireDrmDisplayEXT;
vkGetDrmDisplayEXT : PFN_vkGetDrmDisplayEXT;
vkWaitForPresent2KHR : PFN_vkWaitForPresent2KHR;
vkWaitForPresentKHR : PFN_vkWaitForPresentKHR;
vkCreateBufferCollectionFUCHSIA : PFN_vkCreateBufferCollectionFUCHSIA;
vkSetBufferCollectionBufferConstraintsFUCHSIA : PFN_vkSetBufferCollectionBufferConstraintsFUCHSIA;
vkSetBufferCollectionImageConstraintsFUCHSIA : PFN_vkSetBufferCollectionImageConstraintsFUCHSIA;
vkDestroyBufferCollectionFUCHSIA : PFN_vkDestroyBufferCollectionFUCHSIA;
vkGetBufferCollectionPropertiesFUCHSIA : PFN_vkGetBufferCollectionPropertiesFUCHSIA;
vkCreateCudaModuleNV : PFN_vkCreateCudaModuleNV;
vkGetCudaModuleCacheNV : PFN_vkGetCudaModuleCacheNV;
vkCreateCudaFunctionNV : PFN_vkCreateCudaFunctionNV;
vkDestroyCudaModuleNV : PFN_vkDestroyCudaModuleNV;
vkDestroyCudaFunctionNV : PFN_vkDestroyCudaFunctionNV;
vkCmdCudaLaunchKernelNV : PFN_vkCmdCudaLaunchKernelNV;
vkCmdBeginRendering : PFN_vkCmdBeginRendering;
vkCmdBeginRenderingKHR : PFN_vkCmdBeginRenderingKHR;
vkCmdEndRendering : PFN_vkCmdEndRendering;
vkCmdEndRendering2EXT : PFN_vkCmdEndRendering2EXT;
vkCmdEndRenderingKHR : PFN_vkCmdEndRenderingKHR;
vkGetDescriptorSetLayoutHostMappingInfoVALVE : PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE;
vkGetDescriptorSetHostMappingVALVE : PFN_vkGetDescriptorSetHostMappingVALVE;
vkCreateMicromapEXT : PFN_vkCreateMicromapEXT;
vkCmdBuildMicromapsEXT : PFN_vkCmdBuildMicromapsEXT;
vkBuildMicromapsEXT : PFN_vkBuildMicromapsEXT;
vkDestroyMicromapEXT : PFN_vkDestroyMicromapEXT;
vkCmdCopyMicromapEXT : PFN_vkCmdCopyMicromapEXT;
vkCopyMicromapEXT : PFN_vkCopyMicromapEXT;
vkCmdCopyMicromapToMemoryEXT : PFN_vkCmdCopyMicromapToMemoryEXT;
vkCopyMicromapToMemoryEXT : PFN_vkCopyMicromapToMemoryEXT;
vkCmdCopyMemoryToMicromapEXT : PFN_vkCmdCopyMemoryToMicromapEXT;
vkCopyMemoryToMicromapEXT : PFN_vkCopyMemoryToMicromapEXT;
vkCmdWriteMicromapsPropertiesEXT : PFN_vkCmdWriteMicromapsPropertiesEXT;
vkWriteMicromapsPropertiesEXT : PFN_vkWriteMicromapsPropertiesEXT;
vkGetDeviceMicromapCompatibilityEXT : PFN_vkGetDeviceMicromapCompatibilityEXT;
vkGetMicromapBuildSizesEXT : PFN_vkGetMicromapBuildSizesEXT;
vkGetShaderModuleIdentifierEXT : PFN_vkGetShaderModuleIdentifierEXT;
vkGetShaderModuleCreateInfoIdentifierEXT : PFN_vkGetShaderModuleCreateInfoIdentifierEXT;
vkGetImageSubresourceLayout2 : PFN_vkGetImageSubresourceLayout2;
vkGetImageSubresourceLayout2KHR : PFN_vkGetImageSubresourceLayout2KHR;
vkGetImageSubresourceLayout2EXT : PFN_vkGetImageSubresourceLayout2EXT;
vkGetPipelinePropertiesEXT : PFN_vkGetPipelinePropertiesEXT;
vkExportMetalObjectsEXT : PFN_vkExportMetalObjectsEXT;
vkCmdBindTileMemoryQCOM : PFN_vkCmdBindTileMemoryQCOM;
vkGetFramebufferTilePropertiesQCOM : PFN_vkGetFramebufferTilePropertiesQCOM;
vkGetDynamicRenderingTilePropertiesQCOM : PFN_vkGetDynamicRenderingTilePropertiesQCOM;
vkGetPhysicalDeviceOpticalFlowImageFormatsNV : PFN_vkGetPhysicalDeviceOpticalFlowImageFormatsNV;
vkCreateOpticalFlowSessionNV : PFN_vkCreateOpticalFlowSessionNV;
vkDestroyOpticalFlowSessionNV : PFN_vkDestroyOpticalFlowSessionNV;
vkBindOpticalFlowSessionImageNV : PFN_vkBindOpticalFlowSessionImageNV;
vkCmdOpticalFlowExecuteNV : PFN_vkCmdOpticalFlowExecuteNV;
vkGetDeviceFaultInfoEXT : PFN_vkGetDeviceFaultInfoEXT;
vkCmdSetDepthBias2EXT : PFN_vkCmdSetDepthBias2EXT;
vkReleaseSwapchainImagesKHR : PFN_vkReleaseSwapchainImagesKHR;
vkReleaseSwapchainImagesEXT : PFN_vkReleaseSwapchainImagesEXT;
vkGetDeviceImageSubresourceLayout : PFN_vkGetDeviceImageSubresourceLayout;
vkGetDeviceImageSubresourceLayoutKHR : PFN_vkGetDeviceImageSubresourceLayoutKHR;
vkMapMemory2 : PFN_vkMapMemory2;
vkMapMemory2KHR : PFN_vkMapMemory2KHR;
vkUnmapMemory2 : PFN_vkUnmapMemory2;
vkUnmapMemory2KHR : PFN_vkUnmapMemory2KHR;
vkCreateShadersEXT : PFN_vkCreateShadersEXT;
vkDestroyShaderEXT : PFN_vkDestroyShaderEXT;
vkGetShaderBinaryDataEXT : PFN_vkGetShaderBinaryDataEXT;
vkCmdBindShadersEXT : PFN_vkCmdBindShadersEXT;
vkGetScreenBufferPropertiesQNX : PFN_vkGetScreenBufferPropertiesQNX;
vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR : PFN_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR;
vkGetExecutionGraphPipelineScratchSizeAMDX : PFN_vkGetExecutionGraphPipelineScratchSizeAMDX;
vkGetExecutionGraphPipelineNodeIndexAMDX : PFN_vkGetExecutionGraphPipelineNodeIndexAMDX;
vkCreateExecutionGraphPipelinesAMDX : PFN_vkCreateExecutionGraphPipelinesAMDX;
vkCmdInitializeGraphScratchMemoryAMDX : PFN_vkCmdInitializeGraphScratchMemoryAMDX;
vkCmdDispatchGraphAMDX : PFN_vkCmdDispatchGraphAMDX;
vkCmdDispatchGraphIndirectAMDX : PFN_vkCmdDispatchGraphIndirectAMDX;
vkCmdDispatchGraphIndirectCountAMDX : PFN_vkCmdDispatchGraphIndirectCountAMDX;
vkCmdBindDescriptorSets2 : PFN_vkCmdBindDescriptorSets2;
vkCmdBindDescriptorSets2KHR : PFN_vkCmdBindDescriptorSets2KHR;
vkCmdPushConstants2 : PFN_vkCmdPushConstants2;
vkCmdPushConstants2KHR : PFN_vkCmdPushConstants2KHR;
vkCmdPushDescriptorSet2 : PFN_vkCmdPushDescriptorSet2;
vkCmdPushDescriptorSet2KHR : PFN_vkCmdPushDescriptorSet2KHR;
vkCmdPushDescriptorSetWithTemplate2 : PFN_vkCmdPushDescriptorSetWithTemplate2;
vkCmdPushDescriptorSetWithTemplate2KHR : PFN_vkCmdPushDescriptorSetWithTemplate2KHR;
vkCmdSetDescriptorBufferOffsets2EXT : PFN_vkCmdSetDescriptorBufferOffsets2EXT;
vkCmdBindDescriptorBufferEmbeddedSamplers2EXT : PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT;
vkSetLatencySleepModeNV : PFN_vkSetLatencySleepModeNV;
vkLatencySleepNV : PFN_vkLatencySleepNV;
vkSetLatencyMarkerNV : PFN_vkSetLatencyMarkerNV;
vkGetLatencyTimingsNV : PFN_vkGetLatencyTimingsNV;
vkQueueNotifyOutOfBandNV : PFN_vkQueueNotifyOutOfBandNV;
vkCmdSetRenderingAttachmentLocations : PFN_vkCmdSetRenderingAttachmentLocations;
vkCmdSetRenderingAttachmentLocationsKHR : PFN_vkCmdSetRenderingAttachmentLocationsKHR;
vkCmdSetRenderingInputAttachmentIndices : PFN_vkCmdSetRenderingInputAttachmentIndices;
vkCmdSetRenderingInputAttachmentIndicesKHR : PFN_vkCmdSetRenderingInputAttachmentIndicesKHR;
vkCmdSetDepthClampRangeEXT : PFN_vkCmdSetDepthClampRangeEXT;
vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV : PFN_vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV;
vkGetMemoryMetalHandleEXT : PFN_vkGetMemoryMetalHandleEXT;
vkGetMemoryMetalHandlePropertiesEXT : PFN_vkGetMemoryMetalHandlePropertiesEXT;
vkGetPhysicalDeviceCooperativeVectorPropertiesNV : PFN_vkGetPhysicalDeviceCooperativeVectorPropertiesNV;
vkConvertCooperativeVectorMatrixNV : PFN_vkConvertCooperativeVectorMatrixNV;
vkCmdConvertCooperativeVectorMatrixNV : PFN_vkCmdConvertCooperativeVectorMatrixNV;
vkCmdDispatchTileQCOM : PFN_vkCmdDispatchTileQCOM;
vkCmdBeginPerTileExecutionQCOM : PFN_vkCmdBeginPerTileExecutionQCOM;
vkCmdEndPerTileExecutionQCOM : PFN_vkCmdEndPerTileExecutionQCOM;
vkCreateExternalComputeQueueNV : PFN_vkCreateExternalComputeQueueNV;
vkDestroyExternalComputeQueueNV : PFN_vkDestroyExternalComputeQueueNV;
vkGetExternalComputeQueueDataNV : PFN_vkGetExternalComputeQueueDataNV;
vkCreateTensorARM : PFN_vkCreateTensorARM;
vkDestroyTensorARM : PFN_vkDestroyTensorARM;
vkCreateTensorViewARM : PFN_vkCreateTensorViewARM;
vkDestroyTensorViewARM : PFN_vkDestroyTensorViewARM;
vkGetTensorMemoryRequirementsARM : PFN_vkGetTensorMemoryRequirementsARM;
vkBindTensorMemoryARM : PFN_vkBindTensorMemoryARM;
vkGetDeviceTensorMemoryRequirementsARM : PFN_vkGetDeviceTensorMemoryRequirementsARM;
vkCmdCopyTensorARM : PFN_vkCmdCopyTensorARM;
vkGetTensorOpaqueCaptureDescriptorDataARM : PFN_vkGetTensorOpaqueCaptureDescriptorDataARM;
vkGetTensorViewOpaqueCaptureDescriptorDataARM : PFN_vkGetTensorViewOpaqueCaptureDescriptorDataARM;
vkGetPhysicalDeviceExternalTensorPropertiesARM : PFN_vkGetPhysicalDeviceExternalTensorPropertiesARM;
vkCreateDataGraphPipelinesARM : PFN_vkCreateDataGraphPipelinesARM;
vkCreateDataGraphPipelineSessionARM : PFN_vkCreateDataGraphPipelineSessionARM;
vkGetDataGraphPipelineSessionBindPointRequirementsARM : PFN_vkGetDataGraphPipelineSessionBindPointRequirementsARM;
vkGetDataGraphPipelineSessionMemoryRequirementsARM : PFN_vkGetDataGraphPipelineSessionMemoryRequirementsARM;
vkBindDataGraphPipelineSessionMemoryARM : PFN_vkBindDataGraphPipelineSessionMemoryARM;
vkDestroyDataGraphPipelineSessionARM : PFN_vkDestroyDataGraphPipelineSessionARM;
vkCmdDispatchDataGraphARM : PFN_vkCmdDispatchDataGraphARM;
vkGetDataGraphPipelineAvailablePropertiesARM : PFN_vkGetDataGraphPipelineAvailablePropertiesARM;
vkGetDataGraphPipelinePropertiesARM : PFN_vkGetDataGraphPipelinePropertiesARM;
vkGetPhysicalDeviceQueueFamilyDataGraphPropertiesARM : PFN_vkGetPhysicalDeviceQueueFamilyDataGraphPropertiesARM;
vkGetPhysicalDeviceQueueFamilyDataGraphProcessingEnginePropertiesARM : PFN_vkGetPhysicalDeviceQueueFamilyDataGraphProcessingEnginePropertiesARM;
vkDebugUtilsMessengerCallbackEXT : PFN_vkDebugUtilsMessengerCallbackEXT;

vk_load_global_functions :: (vk_get_instance_proc_addr: *void) {
    vkGetInstanceProcAddr = xx vk_get_instance_proc_addr;

    vkCreateInstance                       = xx vkGetInstanceProcAddr(null, "vkCreateInstance");
    vkEnumerateInstanceVersion             = xx vkGetInstanceProcAddr(null, "vkEnumerateInstanceVersion");
    vkEnumerateInstanceLayerProperties     = xx vkGetInstanceProcAddr(null, "vkEnumerateInstanceLayerProperties");
    vkEnumerateInstanceExtensionProperties = xx vkGetInstanceProcAddr(null, "vkEnumerateInstanceExtensionProperties");
    vkDebugUtilsMessengerCallbackEXT       = xx vkGetInstanceProcAddr(null, "vkDebugUtilsMessengerCallbackEXT");
}

vk_load_instance_functions :: (instance: VkInstance) {
    vkDestroyInstance                                                    = xx vkGetInstanceProcAddr(instance, "vkDestroyInstance");
    vkEnumeratePhysicalDevices                                           = xx vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDevices");
    vkGetDeviceProcAddr                                                  = xx vkGetInstanceProcAddr(instance, "vkGetDeviceProcAddr");
    vkGetPhysicalDeviceProperties                                        = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceProperties");
    vkGetPhysicalDeviceQueueFamilyProperties                             = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyProperties");
    vkGetPhysicalDeviceMemoryProperties                                  = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMemoryProperties");
    vkGetPhysicalDeviceFeatures                                          = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFeatures");
    vkGetPhysicalDeviceFormatProperties                                  = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFormatProperties");
    vkGetPhysicalDeviceImageFormatProperties                             = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceImageFormatProperties");
    vkCreateDevice                                                       = xx vkGetInstanceProcAddr(instance, "vkCreateDevice");
    vkEnumerateDeviceLayerProperties                                     = xx vkGetInstanceProcAddr(instance, "vkEnumerateDeviceLayerProperties");
    vkEnumerateDeviceExtensionProperties                                 = xx vkGetInstanceProcAddr(instance, "vkEnumerateDeviceExtensionProperties");
    vkGetPhysicalDeviceSparseImageFormatProperties                       = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSparseImageFormatProperties");
    vkCreateAndroidSurfaceKHR                                            = xx vkGetInstanceProcAddr(instance, "vkCreateAndroidSurfaceKHR");
    vkCreateSurfaceOHOS                                                  = xx vkGetInstanceProcAddr(instance, "vkCreateSurfaceOHOS");
    vkGetPhysicalDeviceDisplayPropertiesKHR                              = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPropertiesKHR");
    vkGetPhysicalDeviceDisplayPlanePropertiesKHR                         = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPlanePropertiesKHR");
    vkGetDisplayPlaneSupportedDisplaysKHR                                = xx vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneSupportedDisplaysKHR");
    vkGetDisplayModePropertiesKHR                                        = xx vkGetInstanceProcAddr(instance, "vkGetDisplayModePropertiesKHR");
    vkCreateDisplayModeKHR                                               = xx vkGetInstanceProcAddr(instance, "vkCreateDisplayModeKHR");
    vkGetDisplayPlaneCapabilitiesKHR                                     = xx vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneCapabilitiesKHR");
    vkCreateDisplayPlaneSurfaceKHR                                       = xx vkGetInstanceProcAddr(instance, "vkCreateDisplayPlaneSurfaceKHR");
    vkDestroySurfaceKHR                                                  = xx vkGetInstanceProcAddr(instance, "vkDestroySurfaceKHR");
    vkGetPhysicalDeviceSurfaceSupportKHR                                 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceSupportKHR");
    vkGetPhysicalDeviceSurfaceCapabilitiesKHR                            = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilitiesKHR");
    vkGetPhysicalDeviceSurfaceFormatsKHR                                 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceFormatsKHR");
    vkGetPhysicalDeviceSurfacePresentModesKHR                            = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfacePresentModesKHR");
    vkCreateViSurfaceNN                                                  = xx vkGetInstanceProcAddr(instance, "vkCreateViSurfaceNN");
    vkCreateWaylandSurfaceKHR                                            = xx vkGetInstanceProcAddr(instance, "vkCreateWaylandSurfaceKHR");
    vkGetPhysicalDeviceWaylandPresentationSupportKHR                     = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceWaylandPresentationSupportKHR");
    vkCreateWin32SurfaceKHR                                              = xx vkGetInstanceProcAddr(instance, "vkCreateWin32SurfaceKHR");
    vkGetPhysicalDeviceWin32PresentationSupportKHR                       = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceWin32PresentationSupportKHR");
    vkCreateXlibSurfaceKHR                                               = xx vkGetInstanceProcAddr(instance, "vkCreateXlibSurfaceKHR");
    vkGetPhysicalDeviceXlibPresentationSupportKHR                        = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceXlibPresentationSupportKHR");
    vkCreateXcbSurfaceKHR                                                = xx vkGetInstanceProcAddr(instance, "vkCreateXcbSurfaceKHR");
    vkGetPhysicalDeviceXcbPresentationSupportKHR                         = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceXcbPresentationSupportKHR");
    vkCreateDirectFBSurfaceEXT                                           = xx vkGetInstanceProcAddr(instance, "vkCreateDirectFBSurfaceEXT");
    vkGetPhysicalDeviceDirectFBPresentationSupportEXT                    = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDirectFBPresentationSupportEXT");
    vkCreateImagePipeSurfaceFUCHSIA                                      = xx vkGetInstanceProcAddr(instance, "vkCreateImagePipeSurfaceFUCHSIA");
    vkCreateStreamDescriptorSurfaceGGP                                   = xx vkGetInstanceProcAddr(instance, "vkCreateStreamDescriptorSurfaceGGP");
    vkCreateScreenSurfaceQNX                                             = xx vkGetInstanceProcAddr(instance, "vkCreateScreenSurfaceQNX");
    vkGetPhysicalDeviceScreenPresentationSupportQNX                      = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceScreenPresentationSupportQNX");
    vkCreateDebugReportCallbackEXT                                       = xx vkGetInstanceProcAddr(instance, "vkCreateDebugReportCallbackEXT");
    vkDestroyDebugReportCallbackEXT                                      = xx vkGetInstanceProcAddr(instance, "vkDestroyDebugReportCallbackEXT");
    vkDebugReportMessageEXT                                              = xx vkGetInstanceProcAddr(instance, "vkDebugReportMessageEXT");
    vkGetPhysicalDeviceExternalImageFormatPropertiesNV                   = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalImageFormatPropertiesNV");
    vkGetPhysicalDeviceFeatures2                                         = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFeatures2");
    vkGetPhysicalDeviceProperties2                                       = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceProperties2");
    vkGetPhysicalDeviceFormatProperties2                                 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFormatProperties2");
    vkGetPhysicalDeviceImageFormatProperties2                            = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceImageFormatProperties2");
    vkGetPhysicalDeviceQueueFamilyProperties2                            = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyProperties2");
    vkGetPhysicalDeviceMemoryProperties2                                 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMemoryProperties2");
    vkGetPhysicalDeviceSparseImageFormatProperties2                      = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSparseImageFormatProperties2");
    vkGetPhysicalDeviceExternalBufferProperties                          = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalBufferProperties");
    vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV                  = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalMemorySciBufPropertiesNV");
    vkGetPhysicalDeviceSciBufAttributesNV                                = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSciBufAttributesNV");
    vkGetPhysicalDeviceExternalSemaphoreProperties                       = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalSemaphoreProperties");
    vkGetPhysicalDeviceExternalFenceProperties                           = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalFenceProperties");
    vkGetPhysicalDeviceSciSyncAttributesNV                               = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSciSyncAttributesNV");
    vkReleaseDisplayEXT                                                  = xx vkGetInstanceProcAddr(instance, "vkReleaseDisplayEXT");
    vkAcquireXlibDisplayEXT                                              = xx vkGetInstanceProcAddr(instance, "vkAcquireXlibDisplayEXT");
    vkGetRandROutputDisplayEXT                                           = xx vkGetInstanceProcAddr(instance, "vkGetRandROutputDisplayEXT");
    vkAcquireWinrtDisplayNV                                              = xx vkGetInstanceProcAddr(instance, "vkAcquireWinrtDisplayNV");
    vkGetWinrtDisplayNV                                                  = xx vkGetInstanceProcAddr(instance, "vkGetWinrtDisplayNV");
    vkGetPhysicalDeviceSurfaceCapabilities2EXT                           = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilities2EXT");
    vkEnumeratePhysicalDeviceGroups                                      = xx vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDeviceGroups");
    vkGetPhysicalDevicePresentRectanglesKHR                              = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDevicePresentRectanglesKHR");
    vkCreateIOSSurfaceMVK                                                = xx vkGetInstanceProcAddr(instance, "vkCreateIOSSurfaceMVK");
    vkCreateMacOSSurfaceMVK                                              = xx vkGetInstanceProcAddr(instance, "vkCreateMacOSSurfaceMVK");
    vkCreateMetalSurfaceEXT                                              = xx vkGetInstanceProcAddr(instance, "vkCreateMetalSurfaceEXT");
    vkGetPhysicalDeviceMultisamplePropertiesEXT                          = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceMultisamplePropertiesEXT");
    vkGetPhysicalDeviceSurfaceCapabilities2KHR                           = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceCapabilities2KHR");
    vkGetPhysicalDeviceSurfaceFormats2KHR                                = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfaceFormats2KHR");
    vkGetPhysicalDeviceDisplayProperties2KHR                             = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayProperties2KHR");
    vkGetPhysicalDeviceDisplayPlaneProperties2KHR                        = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceDisplayPlaneProperties2KHR");
    vkGetDisplayModeProperties2KHR                                       = xx vkGetInstanceProcAddr(instance, "vkGetDisplayModeProperties2KHR");
    vkGetDisplayPlaneCapabilities2KHR                                    = xx vkGetInstanceProcAddr(instance, "vkGetDisplayPlaneCapabilities2KHR");
    vkGetPhysicalDeviceCalibrateableTimeDomainsKHR                       = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCalibrateableTimeDomainsKHR");
    vkCreateDebugUtilsMessengerEXT                                       = xx vkGetInstanceProcAddr(instance, "vkCreateDebugUtilsMessengerEXT");
    vkDestroyDebugUtilsMessengerEXT                                      = xx vkGetInstanceProcAddr(instance, "vkDestroyDebugUtilsMessengerEXT");
    vkSubmitDebugUtilsMessageEXT                                         = xx vkGetInstanceProcAddr(instance, "vkSubmitDebugUtilsMessageEXT");
    vkGetPhysicalDeviceCooperativeMatrixPropertiesNV                     = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV");
    vkGetPhysicalDeviceSurfacePresentModes2EXT                           = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSurfacePresentModes2EXT");
    vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR      = xx vkGetInstanceProcAddr(instance, "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR");
    vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR              = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR");
    vkCreateHeadlessSurfaceEXT                                           = xx vkGetInstanceProcAddr(instance, "vkCreateHeadlessSurfaceEXT");
    vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV    = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV");
    vkGetPhysicalDeviceToolProperties                                    = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceToolProperties");
    vkGetPhysicalDeviceRefreshableObjectTypesKHR                         = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceRefreshableObjectTypesKHR");
    vkGetPhysicalDeviceFragmentShadingRatesKHR                           = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceFragmentShadingRatesKHR");
    vkGetPhysicalDeviceVideoCapabilitiesKHR                              = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceVideoCapabilitiesKHR");
    vkGetPhysicalDeviceVideoFormatPropertiesKHR                          = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceVideoFormatPropertiesKHR");
    vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR              = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR");
    vkAcquireDrmDisplayEXT                                               = xx vkGetInstanceProcAddr(instance, "vkAcquireDrmDisplayEXT");
    vkGetDrmDisplayEXT                                                   = xx vkGetInstanceProcAddr(instance, "vkGetDrmDisplayEXT");
    vkGetPhysicalDeviceOpticalFlowImageFormatsNV                         = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceOpticalFlowImageFormatsNV");
    vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR                    = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR");
    vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV   = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV");
    vkGetPhysicalDeviceCooperativeVectorPropertiesNV                     = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceCooperativeVectorPropertiesNV");
    vkGetPhysicalDeviceExternalTensorPropertiesARM                       = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceExternalTensorPropertiesARM");
    vkGetPhysicalDeviceQueueFamilyDataGraphPropertiesARM                 = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyDataGraphPropertiesARM");
    vkGetPhysicalDeviceQueueFamilyDataGraphProcessingEnginePropertiesARM = xx vkGetInstanceProcAddr(instance, "vkGetPhysicalDeviceQueueFamilyDataGraphProcessingEnginePropertiesARM");
}

vk_load_device_functions :: (device: VkDevice) {
    vkDestroyDevice                                          = xx vkGetDeviceProcAddr(device, "vkDestroyDevice");
    vkGetDeviceQueue                                         = xx vkGetDeviceProcAddr(device, "vkGetDeviceQueue");
    vkQueueSubmit                                            = xx vkGetDeviceProcAddr(device, "vkQueueSubmit");
    vkQueueWaitIdle                                          = xx vkGetDeviceProcAddr(device, "vkQueueWaitIdle");
    vkDeviceWaitIdle                                         = xx vkGetDeviceProcAddr(device, "vkDeviceWaitIdle");
    vkAllocateMemory                                         = xx vkGetDeviceProcAddr(device, "vkAllocateMemory");
    vkFreeMemory                                             = xx vkGetDeviceProcAddr(device, "vkFreeMemory");
    vkMapMemory                                              = xx vkGetDeviceProcAddr(device, "vkMapMemory");
    vkUnmapMemory                                            = xx vkGetDeviceProcAddr(device, "vkUnmapMemory");
    vkFlushMappedMemoryRanges                                = xx vkGetDeviceProcAddr(device, "vkFlushMappedMemoryRanges");
    vkInvalidateMappedMemoryRanges                           = xx vkGetDeviceProcAddr(device, "vkInvalidateMappedMemoryRanges");
    vkGetDeviceMemoryCommitment                              = xx vkGetDeviceProcAddr(device, "vkGetDeviceMemoryCommitment");
    vkGetBufferMemoryRequirements                            = xx vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements");
    vkBindBufferMemory                                       = xx vkGetDeviceProcAddr(device, "vkBindBufferMemory");
    vkGetImageMemoryRequirements                             = xx vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements");
    vkBindImageMemory                                        = xx vkGetDeviceProcAddr(device, "vkBindImageMemory");
    vkGetImageSparseMemoryRequirements                       = xx vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements");
    vkQueueBindSparse                                        = xx vkGetDeviceProcAddr(device, "vkQueueBindSparse");
    vkCreateFence                                            = xx vkGetDeviceProcAddr(device, "vkCreateFence");
    vkDestroyFence                                           = xx vkGetDeviceProcAddr(device, "vkDestroyFence");
    vkResetFences                                            = xx vkGetDeviceProcAddr(device, "vkResetFences");
    vkGetFenceStatus                                         = xx vkGetDeviceProcAddr(device, "vkGetFenceStatus");
    vkWaitForFences                                          = xx vkGetDeviceProcAddr(device, "vkWaitForFences");
    vkCreateSemaphore                                        = xx vkGetDeviceProcAddr(device, "vkCreateSemaphore");
    vkDestroySemaphore                                       = xx vkGetDeviceProcAddr(device, "vkDestroySemaphore");
    vkCreateEvent                                            = xx vkGetDeviceProcAddr(device, "vkCreateEvent");
    vkDestroyEvent                                           = xx vkGetDeviceProcAddr(device, "vkDestroyEvent");
    vkGetEventStatus                                         = xx vkGetDeviceProcAddr(device, "vkGetEventStatus");
    vkSetEvent                                               = xx vkGetDeviceProcAddr(device, "vkSetEvent");
    vkResetEvent                                             = xx vkGetDeviceProcAddr(device, "vkResetEvent");
    vkCreateQueryPool                                        = xx vkGetDeviceProcAddr(device, "vkCreateQueryPool");
    vkDestroyQueryPool                                       = xx vkGetDeviceProcAddr(device, "vkDestroyQueryPool");
    vkGetQueryPoolResults                                    = xx vkGetDeviceProcAddr(device, "vkGetQueryPoolResults");
    vkResetQueryPool                                         = xx vkGetDeviceProcAddr(device, "vkResetQueryPool");
    vkCreateBuffer                                           = xx vkGetDeviceProcAddr(device, "vkCreateBuffer");
    vkDestroyBuffer                                          = xx vkGetDeviceProcAddr(device, "vkDestroyBuffer");
    vkCreateBufferView                                       = xx vkGetDeviceProcAddr(device, "vkCreateBufferView");
    vkDestroyBufferView                                      = xx vkGetDeviceProcAddr(device, "vkDestroyBufferView");
    vkCreateImage                                            = xx vkGetDeviceProcAddr(device, "vkCreateImage");
    vkDestroyImage                                           = xx vkGetDeviceProcAddr(device, "vkDestroyImage");
    vkGetImageSubresourceLayout                              = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout");
    vkCreateImageView                                        = xx vkGetDeviceProcAddr(device, "vkCreateImageView");
    vkDestroyImageView                                       = xx vkGetDeviceProcAddr(device, "vkDestroyImageView");
    vkCreateShaderModule                                     = xx vkGetDeviceProcAddr(device, "vkCreateShaderModule");
    vkDestroyShaderModule                                    = xx vkGetDeviceProcAddr(device, "vkDestroyShaderModule");
    vkCreatePipelineCache                                    = xx vkGetDeviceProcAddr(device, "vkCreatePipelineCache");
    vkDestroyPipelineCache                                   = xx vkGetDeviceProcAddr(device, "vkDestroyPipelineCache");
    vkGetPipelineCacheData                                   = xx vkGetDeviceProcAddr(device, "vkGetPipelineCacheData");
    vkMergePipelineCaches                                    = xx vkGetDeviceProcAddr(device, "vkMergePipelineCaches");
    vkCreatePipelineBinariesKHR                              = xx vkGetDeviceProcAddr(device, "vkCreatePipelineBinariesKHR");
    vkDestroyPipelineBinaryKHR                               = xx vkGetDeviceProcAddr(device, "vkDestroyPipelineBinaryKHR");
    vkGetPipelineKeyKHR                                      = xx vkGetDeviceProcAddr(device, "vkGetPipelineKeyKHR");
    vkGetPipelineBinaryDataKHR                               = xx vkGetDeviceProcAddr(device, "vkGetPipelineBinaryDataKHR");
    vkReleaseCapturedPipelineDataKHR                         = xx vkGetDeviceProcAddr(device, "vkReleaseCapturedPipelineDataKHR");
    vkCreateGraphicsPipelines                                = xx vkGetDeviceProcAddr(device, "vkCreateGraphicsPipelines");
    vkCreateComputePipelines                                 = xx vkGetDeviceProcAddr(device, "vkCreateComputePipelines");
    vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI          = xx vkGetDeviceProcAddr(device, "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI");
    vkDestroyPipeline                                        = xx vkGetDeviceProcAddr(device, "vkDestroyPipeline");
    vkCreatePipelineLayout                                   = xx vkGetDeviceProcAddr(device, "vkCreatePipelineLayout");
    vkDestroyPipelineLayout                                  = xx vkGetDeviceProcAddr(device, "vkDestroyPipelineLayout");
    vkCreateSampler                                          = xx vkGetDeviceProcAddr(device, "vkCreateSampler");
    vkDestroySampler                                         = xx vkGetDeviceProcAddr(device, "vkDestroySampler");
    vkCreateDescriptorSetLayout                              = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorSetLayout");
    vkDestroyDescriptorSetLayout                             = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorSetLayout");
    vkCreateDescriptorPool                                   = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorPool");
    vkDestroyDescriptorPool                                  = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorPool");
    vkResetDescriptorPool                                    = xx vkGetDeviceProcAddr(device, "vkResetDescriptorPool");
    vkAllocateDescriptorSets                                 = xx vkGetDeviceProcAddr(device, "vkAllocateDescriptorSets");
    vkFreeDescriptorSets                                     = xx vkGetDeviceProcAddr(device, "vkFreeDescriptorSets");
    vkUpdateDescriptorSets                                   = xx vkGetDeviceProcAddr(device, "vkUpdateDescriptorSets");
    vkCreateFramebuffer                                      = xx vkGetDeviceProcAddr(device, "vkCreateFramebuffer");
    vkDestroyFramebuffer                                     = xx vkGetDeviceProcAddr(device, "vkDestroyFramebuffer");
    vkCreateRenderPass                                       = xx vkGetDeviceProcAddr(device, "vkCreateRenderPass");
    vkDestroyRenderPass                                      = xx vkGetDeviceProcAddr(device, "vkDestroyRenderPass");
    vkGetRenderAreaGranularity                               = xx vkGetDeviceProcAddr(device, "vkGetRenderAreaGranularity");
    vkGetRenderingAreaGranularity                            = xx vkGetDeviceProcAddr(device, "vkGetRenderingAreaGranularity");
    vkCreateCommandPool                                      = xx vkGetDeviceProcAddr(device, "vkCreateCommandPool");
    vkDestroyCommandPool                                     = xx vkGetDeviceProcAddr(device, "vkDestroyCommandPool");
    vkResetCommandPool                                       = xx vkGetDeviceProcAddr(device, "vkResetCommandPool");
    vkAllocateCommandBuffers                                 = xx vkGetDeviceProcAddr(device, "vkAllocateCommandBuffers");
    vkFreeCommandBuffers                                     = xx vkGetDeviceProcAddr(device, "vkFreeCommandBuffers");
    vkBeginCommandBuffer                                     = xx vkGetDeviceProcAddr(device, "vkBeginCommandBuffer");
    vkEndCommandBuffer                                       = xx vkGetDeviceProcAddr(device, "vkEndCommandBuffer");
    vkResetCommandBuffer                                     = xx vkGetDeviceProcAddr(device, "vkResetCommandBuffer");
    vkCmdBindPipeline                                        = xx vkGetDeviceProcAddr(device, "vkCmdBindPipeline");
    vkCmdSetAttachmentFeedbackLoopEnableEXT                  = xx vkGetDeviceProcAddr(device, "vkCmdSetAttachmentFeedbackLoopEnableEXT");
    vkCmdSetViewport                                         = xx vkGetDeviceProcAddr(device, "vkCmdSetViewport");
    vkCmdSetScissor                                          = xx vkGetDeviceProcAddr(device, "vkCmdSetScissor");
    vkCmdSetLineWidth                                        = xx vkGetDeviceProcAddr(device, "vkCmdSetLineWidth");
    vkCmdSetDepthBias                                        = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBias");
    vkCmdSetBlendConstants                                   = xx vkGetDeviceProcAddr(device, "vkCmdSetBlendConstants");
    vkCmdSetDepthBounds                                      = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBounds");
    vkCmdSetStencilCompareMask                               = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilCompareMask");
    vkCmdSetStencilWriteMask                                 = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilWriteMask");
    vkCmdSetStencilReference                                 = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilReference");
    vkCmdBindDescriptorSets                                  = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorSets");
    vkCmdBindIndexBuffer                                     = xx vkGetDeviceProcAddr(device, "vkCmdBindIndexBuffer");
    vkCmdBindVertexBuffers                                   = xx vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers");
    vkCmdDraw                                                = xx vkGetDeviceProcAddr(device, "vkCmdDraw");
    vkCmdDrawIndexed                                         = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexed");
    vkCmdDrawMultiEXT                                        = xx vkGetDeviceProcAddr(device, "vkCmdDrawMultiEXT");
    vkCmdDrawMultiIndexedEXT                                 = xx vkGetDeviceProcAddr(device, "vkCmdDrawMultiIndexedEXT");
    vkCmdDrawIndirect                                        = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirect");
    vkCmdDrawIndexedIndirect                                 = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirect");
    vkCmdDispatch                                            = xx vkGetDeviceProcAddr(device, "vkCmdDispatch");
    vkCmdDispatchIndirect                                    = xx vkGetDeviceProcAddr(device, "vkCmdDispatchIndirect");
    vkCmdSubpassShadingHUAWEI                                = xx vkGetDeviceProcAddr(device, "vkCmdSubpassShadingHUAWEI");
    vkCmdDrawClusterHUAWEI                                   = xx vkGetDeviceProcAddr(device, "vkCmdDrawClusterHUAWEI");
    vkCmdDrawClusterIndirectHUAWEI                           = xx vkGetDeviceProcAddr(device, "vkCmdDrawClusterIndirectHUAWEI");
    vkCmdUpdatePipelineIndirectBufferNV                      = xx vkGetDeviceProcAddr(device, "vkCmdUpdatePipelineIndirectBufferNV");
    vkCmdCopyBuffer                                          = xx vkGetDeviceProcAddr(device, "vkCmdCopyBuffer");
    vkCmdCopyImage                                           = xx vkGetDeviceProcAddr(device, "vkCmdCopyImage");
    vkCmdBlitImage                                           = xx vkGetDeviceProcAddr(device, "vkCmdBlitImage");
    vkCmdCopyBufferToImage                                   = xx vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage");
    vkCmdCopyImageToBuffer                                   = xx vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer");
    vkCmdCopyMemoryIndirectNV                                = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryIndirectNV");
    vkCmdCopyMemoryToImageIndirectNV                         = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToImageIndirectNV");
    vkCmdUpdateBuffer                                        = xx vkGetDeviceProcAddr(device, "vkCmdUpdateBuffer");
    vkCmdFillBuffer                                          = xx vkGetDeviceProcAddr(device, "vkCmdFillBuffer");
    vkCmdClearColorImage                                     = xx vkGetDeviceProcAddr(device, "vkCmdClearColorImage");
    vkCmdClearDepthStencilImage                              = xx vkGetDeviceProcAddr(device, "vkCmdClearDepthStencilImage");
    vkCmdClearAttachments                                    = xx vkGetDeviceProcAddr(device, "vkCmdClearAttachments");
    vkCmdResolveImage                                        = xx vkGetDeviceProcAddr(device, "vkCmdResolveImage");
    vkCmdSetEvent                                            = xx vkGetDeviceProcAddr(device, "vkCmdSetEvent");
    vkCmdResetEvent                                          = xx vkGetDeviceProcAddr(device, "vkCmdResetEvent");
    vkCmdWaitEvents                                          = xx vkGetDeviceProcAddr(device, "vkCmdWaitEvents");
    vkCmdPipelineBarrier                                     = xx vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier");
    vkCmdBeginQuery                                          = xx vkGetDeviceProcAddr(device, "vkCmdBeginQuery");
    vkCmdEndQuery                                            = xx vkGetDeviceProcAddr(device, "vkCmdEndQuery");
    vkCmdBeginConditionalRenderingEXT                        = xx vkGetDeviceProcAddr(device, "vkCmdBeginConditionalRenderingEXT");
    vkCmdEndConditionalRenderingEXT                          = xx vkGetDeviceProcAddr(device, "vkCmdEndConditionalRenderingEXT");
    vkCmdResetQueryPool                                      = xx vkGetDeviceProcAddr(device, "vkCmdResetQueryPool");
    vkCmdWriteTimestamp                                      = xx vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp");
    vkCmdCopyQueryPoolResults                                = xx vkGetDeviceProcAddr(device, "vkCmdCopyQueryPoolResults");
    vkCmdPushConstants                                       = xx vkGetDeviceProcAddr(device, "vkCmdPushConstants");
    vkCmdBeginRenderPass                                     = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass");
    vkCmdNextSubpass                                         = xx vkGetDeviceProcAddr(device, "vkCmdNextSubpass");
    vkCmdEndRenderPass                                       = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderPass");
    vkCmdExecuteCommands                                     = xx vkGetDeviceProcAddr(device, "vkCmdExecuteCommands");
    vkCreateSharedSwapchainsKHR                              = xx vkGetDeviceProcAddr(device, "vkCreateSharedSwapchainsKHR");
    vkCreateSwapchainKHR                                     = xx vkGetDeviceProcAddr(device, "vkCreateSwapchainKHR");
    vkDestroySwapchainKHR                                    = xx vkGetDeviceProcAddr(device, "vkDestroySwapchainKHR");
    vkGetSwapchainImagesKHR                                  = xx vkGetDeviceProcAddr(device, "vkGetSwapchainImagesKHR");
    vkAcquireNextImageKHR                                    = xx vkGetDeviceProcAddr(device, "vkAcquireNextImageKHR");
    vkQueuePresentKHR                                        = xx vkGetDeviceProcAddr(device, "vkQueuePresentKHR");
    vkDebugMarkerSetObjectNameEXT                            = xx vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectNameEXT");
    vkDebugMarkerSetObjectTagEXT                             = xx vkGetDeviceProcAddr(device, "vkDebugMarkerSetObjectTagEXT");
    vkCmdDebugMarkerBeginEXT                                 = xx vkGetDeviceProcAddr(device, "vkCmdDebugMarkerBeginEXT");
    vkCmdDebugMarkerEndEXT                                   = xx vkGetDeviceProcAddr(device, "vkCmdDebugMarkerEndEXT");
    vkCmdDebugMarkerInsertEXT                                = xx vkGetDeviceProcAddr(device, "vkCmdDebugMarkerInsertEXT");
    vkGetMemoryWin32HandleNV                                 = xx vkGetDeviceProcAddr(device, "vkGetMemoryWin32HandleNV");
    vkCmdExecuteGeneratedCommandsNV                          = xx vkGetDeviceProcAddr(device, "vkCmdExecuteGeneratedCommandsNV");
    vkCmdPreprocessGeneratedCommandsNV                       = xx vkGetDeviceProcAddr(device, "vkCmdPreprocessGeneratedCommandsNV");
    vkCmdBindPipelineShaderGroupNV                           = xx vkGetDeviceProcAddr(device, "vkCmdBindPipelineShaderGroupNV");
    vkGetGeneratedCommandsMemoryRequirementsNV               = xx vkGetDeviceProcAddr(device, "vkGetGeneratedCommandsMemoryRequirementsNV");
    vkCreateIndirectCommandsLayoutNV                         = xx vkGetDeviceProcAddr(device, "vkCreateIndirectCommandsLayoutNV");
    vkDestroyIndirectCommandsLayoutNV                        = xx vkGetDeviceProcAddr(device, "vkDestroyIndirectCommandsLayoutNV");
    vkCmdExecuteGeneratedCommandsEXT                         = xx vkGetDeviceProcAddr(device, "vkCmdExecuteGeneratedCommandsEXT");
    vkCmdPreprocessGeneratedCommandsEXT                      = xx vkGetDeviceProcAddr(device, "vkCmdPreprocessGeneratedCommandsEXT");
    vkGetGeneratedCommandsMemoryRequirementsEXT              = xx vkGetDeviceProcAddr(device, "vkGetGeneratedCommandsMemoryRequirementsEXT");
    vkCreateIndirectCommandsLayoutEXT                        = xx vkGetDeviceProcAddr(device, "vkCreateIndirectCommandsLayoutEXT");
    vkDestroyIndirectCommandsLayoutEXT                       = xx vkGetDeviceProcAddr(device, "vkDestroyIndirectCommandsLayoutEXT");
    vkCreateIndirectExecutionSetEXT                          = xx vkGetDeviceProcAddr(device, "vkCreateIndirectExecutionSetEXT");
    vkDestroyIndirectExecutionSetEXT                         = xx vkGetDeviceProcAddr(device, "vkDestroyIndirectExecutionSetEXT");
    vkUpdateIndirectExecutionSetPipelineEXT                  = xx vkGetDeviceProcAddr(device, "vkUpdateIndirectExecutionSetPipelineEXT");
    vkUpdateIndirectExecutionSetShaderEXT                    = xx vkGetDeviceProcAddr(device, "vkUpdateIndirectExecutionSetShaderEXT");
    vkCmdPushDescriptorSet                                   = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSet");
    vkTrimCommandPool                                        = xx vkGetDeviceProcAddr(device, "vkTrimCommandPool");
    vkGetMemoryWin32HandleKHR                                = xx vkGetDeviceProcAddr(device, "vkGetMemoryWin32HandleKHR");
    vkGetMemoryWin32HandlePropertiesKHR                      = xx vkGetDeviceProcAddr(device, "vkGetMemoryWin32HandlePropertiesKHR");
    vkGetMemoryFdKHR                                         = xx vkGetDeviceProcAddr(device, "vkGetMemoryFdKHR");
    vkGetMemoryFdPropertiesKHR                               = xx vkGetDeviceProcAddr(device, "vkGetMemoryFdPropertiesKHR");
    vkGetMemoryZirconHandleFUCHSIA                           = xx vkGetDeviceProcAddr(device, "vkGetMemoryZirconHandleFUCHSIA");
    vkGetMemoryZirconHandlePropertiesFUCHSIA                 = xx vkGetDeviceProcAddr(device, "vkGetMemoryZirconHandlePropertiesFUCHSIA");
    vkGetMemoryRemoteAddressNV                               = xx vkGetDeviceProcAddr(device, "vkGetMemoryRemoteAddressNV");
    vkGetMemorySciBufNV                                      = xx vkGetDeviceProcAddr(device, "vkGetMemorySciBufNV");
    vkGetSemaphoreWin32HandleKHR                             = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreWin32HandleKHR");
    vkImportSemaphoreWin32HandleKHR                          = xx vkGetDeviceProcAddr(device, "vkImportSemaphoreWin32HandleKHR");
    vkGetSemaphoreFdKHR                                      = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreFdKHR");
    vkImportSemaphoreFdKHR                                   = xx vkGetDeviceProcAddr(device, "vkImportSemaphoreFdKHR");
    vkGetSemaphoreZirconHandleFUCHSIA                        = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreZirconHandleFUCHSIA");
    vkImportSemaphoreZirconHandleFUCHSIA                     = xx vkGetDeviceProcAddr(device, "vkImportSemaphoreZirconHandleFUCHSIA");
    vkGetFenceWin32HandleKHR                                 = xx vkGetDeviceProcAddr(device, "vkGetFenceWin32HandleKHR");
    vkImportFenceWin32HandleKHR                              = xx vkGetDeviceProcAddr(device, "vkImportFenceWin32HandleKHR");
    vkGetFenceFdKHR                                          = xx vkGetDeviceProcAddr(device, "vkGetFenceFdKHR");
    vkImportFenceFdKHR                                       = xx vkGetDeviceProcAddr(device, "vkImportFenceFdKHR");
    vkGetFenceSciSyncFenceNV                                 = xx vkGetDeviceProcAddr(device, "vkGetFenceSciSyncFenceNV");
    vkGetFenceSciSyncObjNV                                   = xx vkGetDeviceProcAddr(device, "vkGetFenceSciSyncObjNV");
    vkImportFenceSciSyncFenceNV                              = xx vkGetDeviceProcAddr(device, "vkImportFenceSciSyncFenceNV");
    vkImportFenceSciSyncObjNV                                = xx vkGetDeviceProcAddr(device, "vkImportFenceSciSyncObjNV");
    vkGetSemaphoreSciSyncObjNV                               = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreSciSyncObjNV");
    vkImportSemaphoreSciSyncObjNV                            = xx vkGetDeviceProcAddr(device, "vkImportSemaphoreSciSyncObjNV");
    vkCreateSemaphoreSciSyncPoolNV                           = xx vkGetDeviceProcAddr(device, "vkCreateSemaphoreSciSyncPoolNV");
    vkDestroySemaphoreSciSyncPoolNV                          = xx vkGetDeviceProcAddr(device, "vkDestroySemaphoreSciSyncPoolNV");
    vkDisplayPowerControlEXT                                 = xx vkGetDeviceProcAddr(device, "vkDisplayPowerControlEXT");
    vkRegisterDeviceEventEXT                                 = xx vkGetDeviceProcAddr(device, "vkRegisterDeviceEventEXT");
    vkRegisterDisplayEventEXT                                = xx vkGetDeviceProcAddr(device, "vkRegisterDisplayEventEXT");
    vkGetSwapchainCounterEXT                                 = xx vkGetDeviceProcAddr(device, "vkGetSwapchainCounterEXT");
    vkGetDeviceGroupPeerMemoryFeatures                       = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupPeerMemoryFeatures");
    vkBindBufferMemory2                                      = xx vkGetDeviceProcAddr(device, "vkBindBufferMemory2");
    vkBindImageMemory2                                       = xx vkGetDeviceProcAddr(device, "vkBindImageMemory2");
    vkCmdSetDeviceMask                                       = xx vkGetDeviceProcAddr(device, "vkCmdSetDeviceMask");
    vkGetDeviceGroupPresentCapabilitiesKHR                   = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupPresentCapabilitiesKHR");
    vkGetDeviceGroupSurfacePresentModesKHR                   = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupSurfacePresentModesKHR");
    vkAcquireNextImage2KHR                                   = xx vkGetDeviceProcAddr(device, "vkAcquireNextImage2KHR");
    vkCmdDispatchBase                                        = xx vkGetDeviceProcAddr(device, "vkCmdDispatchBase");
    vkCreateDescriptorUpdateTemplate                         = xx vkGetDeviceProcAddr(device, "vkCreateDescriptorUpdateTemplate");
    vkDestroyDescriptorUpdateTemplate                        = xx vkGetDeviceProcAddr(device, "vkDestroyDescriptorUpdateTemplate");
    vkUpdateDescriptorSetWithTemplate                        = xx vkGetDeviceProcAddr(device, "vkUpdateDescriptorSetWithTemplate");
    vkCmdPushDescriptorSetWithTemplate                       = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplate");
    vkSetHdrMetadataEXT                                      = xx vkGetDeviceProcAddr(device, "vkSetHdrMetadataEXT");
    vkGetSwapchainStatusKHR                                  = xx vkGetDeviceProcAddr(device, "vkGetSwapchainStatusKHR");
    vkGetRefreshCycleDurationGOOGLE                          = xx vkGetDeviceProcAddr(device, "vkGetRefreshCycleDurationGOOGLE");
    vkGetPastPresentationTimingGOOGLE                        = xx vkGetDeviceProcAddr(device, "vkGetPastPresentationTimingGOOGLE");
    vkCmdSetViewportWScalingNV                               = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWScalingNV");
    vkCmdSetDiscardRectangleEXT                              = xx vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleEXT");
    vkCmdSetDiscardRectangleEnableEXT                        = xx vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleEnableEXT");
    vkCmdSetDiscardRectangleModeEXT                          = xx vkGetDeviceProcAddr(device, "vkCmdSetDiscardRectangleModeEXT");
    vkCmdSetSampleLocationsEXT                               = xx vkGetDeviceProcAddr(device, "vkCmdSetSampleLocationsEXT");
    vkGetBufferMemoryRequirements2                           = xx vkGetDeviceProcAddr(device, "vkGetBufferMemoryRequirements2");
    vkGetImageMemoryRequirements2                            = xx vkGetDeviceProcAddr(device, "vkGetImageMemoryRequirements2");
    vkGetImageSparseMemoryRequirements2                      = xx vkGetDeviceProcAddr(device, "vkGetImageSparseMemoryRequirements2");
    vkGetDeviceBufferMemoryRequirements                      = xx vkGetDeviceProcAddr(device, "vkGetDeviceBufferMemoryRequirements");
    vkGetDeviceImageMemoryRequirements                       = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageMemoryRequirements");
    vkGetDeviceImageSparseMemoryRequirements                 = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSparseMemoryRequirements");
    vkCreateSamplerYcbcrConversion                           = xx vkGetDeviceProcAddr(device, "vkCreateSamplerYcbcrConversion");
    vkDestroySamplerYcbcrConversion                          = xx vkGetDeviceProcAddr(device, "vkDestroySamplerYcbcrConversion");
    vkGetDeviceQueue2                                        = xx vkGetDeviceProcAddr(device, "vkGetDeviceQueue2");
    vkCreateValidationCacheEXT                               = xx vkGetDeviceProcAddr(device, "vkCreateValidationCacheEXT");
    vkDestroyValidationCacheEXT                              = xx vkGetDeviceProcAddr(device, "vkDestroyValidationCacheEXT");
    vkGetValidationCacheDataEXT                              = xx vkGetDeviceProcAddr(device, "vkGetValidationCacheDataEXT");
    vkMergeValidationCachesEXT                               = xx vkGetDeviceProcAddr(device, "vkMergeValidationCachesEXT");
    vkGetDescriptorSetLayoutSupport                          = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutSupport");
    vkGetSwapchainGrallocUsageANDROID                        = xx vkGetDeviceProcAddr(device, "vkGetSwapchainGrallocUsageANDROID");
    vkGetSwapchainGrallocUsage2ANDROID                       = xx vkGetDeviceProcAddr(device, "vkGetSwapchainGrallocUsage2ANDROID");
    vkAcquireImageANDROID                                    = xx vkGetDeviceProcAddr(device, "vkAcquireImageANDROID");
    vkQueueSignalReleaseImageANDROID                         = xx vkGetDeviceProcAddr(device, "vkQueueSignalReleaseImageANDROID");
    vkGetShaderInfoAMD                                       = xx vkGetDeviceProcAddr(device, "vkGetShaderInfoAMD");
    vkSetLocalDimmingAMD                                     = xx vkGetDeviceProcAddr(device, "vkSetLocalDimmingAMD");
    vkGetCalibratedTimestampsKHR                             = xx vkGetDeviceProcAddr(device, "vkGetCalibratedTimestampsKHR");
    vkSetDebugUtilsObjectNameEXT                             = xx vkGetDeviceProcAddr(device, "vkSetDebugUtilsObjectNameEXT");
    vkSetDebugUtilsObjectTagEXT                              = xx vkGetDeviceProcAddr(device, "vkSetDebugUtilsObjectTagEXT");
    vkQueueBeginDebugUtilsLabelEXT                           = xx vkGetDeviceProcAddr(device, "vkQueueBeginDebugUtilsLabelEXT");
    vkQueueEndDebugUtilsLabelEXT                             = xx vkGetDeviceProcAddr(device, "vkQueueEndDebugUtilsLabelEXT");
    vkQueueInsertDebugUtilsLabelEXT                          = xx vkGetDeviceProcAddr(device, "vkQueueInsertDebugUtilsLabelEXT");
    vkCmdBeginDebugUtilsLabelEXT                             = xx vkGetDeviceProcAddr(device, "vkCmdBeginDebugUtilsLabelEXT");
    vkCmdEndDebugUtilsLabelEXT                               = xx vkGetDeviceProcAddr(device, "vkCmdEndDebugUtilsLabelEXT");
    vkCmdInsertDebugUtilsLabelEXT                            = xx vkGetDeviceProcAddr(device, "vkCmdInsertDebugUtilsLabelEXT");
    vkGetMemoryHostPointerPropertiesEXT                      = xx vkGetDeviceProcAddr(device, "vkGetMemoryHostPointerPropertiesEXT");
    vkCmdWriteBufferMarkerAMD                                = xx vkGetDeviceProcAddr(device, "vkCmdWriteBufferMarkerAMD");
    vkCreateRenderPass2                                      = xx vkGetDeviceProcAddr(device, "vkCreateRenderPass2");
    vkCmdBeginRenderPass2                                    = xx vkGetDeviceProcAddr(device, "vkCmdBeginRenderPass2");
    vkCmdNextSubpass2                                        = xx vkGetDeviceProcAddr(device, "vkCmdNextSubpass2");
    vkCmdEndRenderPass2                                      = xx vkGetDeviceProcAddr(device, "vkCmdEndRenderPass2");
    vkGetSemaphoreCounterValue                               = xx vkGetDeviceProcAddr(device, "vkGetSemaphoreCounterValue");
    vkWaitSemaphores                                         = xx vkGetDeviceProcAddr(device, "vkWaitSemaphores");
    vkSignalSemaphore                                        = xx vkGetDeviceProcAddr(device, "vkSignalSemaphore");
    vkGetAndroidHardwareBufferPropertiesANDROID              = xx vkGetDeviceProcAddr(device, "vkGetAndroidHardwareBufferPropertiesANDROID");
    vkGetMemoryAndroidHardwareBufferANDROID                  = xx vkGetDeviceProcAddr(device, "vkGetMemoryAndroidHardwareBufferANDROID");
    vkCmdDrawIndirectCount                                   = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectCount");
    vkCmdDrawIndexedIndirectCount                            = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndexedIndirectCount");
    vkCmdSetCheckpointNV                                     = xx vkGetDeviceProcAddr(device, "vkCmdSetCheckpointNV");
    vkGetQueueCheckpointDataNV                               = xx vkGetDeviceProcAddr(device, "vkGetQueueCheckpointDataNV");
    vkCmdBindTransformFeedbackBuffersEXT                     = xx vkGetDeviceProcAddr(device, "vkCmdBindTransformFeedbackBuffersEXT");
    vkCmdBeginTransformFeedbackEXT                           = xx vkGetDeviceProcAddr(device, "vkCmdBeginTransformFeedbackEXT");
    vkCmdEndTransformFeedbackEXT                             = xx vkGetDeviceProcAddr(device, "vkCmdEndTransformFeedbackEXT");
    vkCmdBeginQueryIndexedEXT                                = xx vkGetDeviceProcAddr(device, "vkCmdBeginQueryIndexedEXT");
    vkCmdEndQueryIndexedEXT                                  = xx vkGetDeviceProcAddr(device, "vkCmdEndQueryIndexedEXT");
    vkCmdDrawIndirectByteCountEXT                            = xx vkGetDeviceProcAddr(device, "vkCmdDrawIndirectByteCountEXT");
    vkCmdSetExclusiveScissorNV                               = xx vkGetDeviceProcAddr(device, "vkCmdSetExclusiveScissorNV");
    vkCmdSetExclusiveScissorEnableNV                         = xx vkGetDeviceProcAddr(device, "vkCmdSetExclusiveScissorEnableNV");
    vkCmdBindShadingRateImageNV                              = xx vkGetDeviceProcAddr(device, "vkCmdBindShadingRateImageNV");
    vkCmdSetViewportShadingRatePaletteNV                     = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportShadingRatePaletteNV");
    vkCmdSetCoarseSampleOrderNV                              = xx vkGetDeviceProcAddr(device, "vkCmdSetCoarseSampleOrderNV");
    vkCmdDrawMeshTasksNV                                     = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksNV");
    vkCmdDrawMeshTasksIndirectNV                             = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectNV");
    vkCmdDrawMeshTasksIndirectCountNV                        = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectCountNV");
    vkCmdDrawMeshTasksEXT                                    = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksEXT");
    vkCmdDrawMeshTasksIndirectEXT                            = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectEXT");
    vkCmdDrawMeshTasksIndirectCountEXT                       = xx vkGetDeviceProcAddr(device, "vkCmdDrawMeshTasksIndirectCountEXT");
    vkCompileDeferredNV                                      = xx vkGetDeviceProcAddr(device, "vkCompileDeferredNV");
    vkCreateAccelerationStructureNV                          = xx vkGetDeviceProcAddr(device, "vkCreateAccelerationStructureNV");
    vkCmdBindInvocationMaskHUAWEI                            = xx vkGetDeviceProcAddr(device, "vkCmdBindInvocationMaskHUAWEI");
    vkDestroyAccelerationStructureKHR                        = xx vkGetDeviceProcAddr(device, "vkDestroyAccelerationStructureKHR");
    vkDestroyAccelerationStructureNV                         = xx vkGetDeviceProcAddr(device, "vkDestroyAccelerationStructureNV");
    vkGetAccelerationStructureMemoryRequirementsNV           = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureMemoryRequirementsNV");
    vkBindAccelerationStructureMemoryNV                      = xx vkGetDeviceProcAddr(device, "vkBindAccelerationStructureMemoryNV");
    vkCmdCopyAccelerationStructureNV                         = xx vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureNV");
    vkCmdCopyAccelerationStructureKHR                        = xx vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureKHR");
    vkCopyAccelerationStructureKHR                           = xx vkGetDeviceProcAddr(device, "vkCopyAccelerationStructureKHR");
    vkCmdCopyAccelerationStructureToMemoryKHR                = xx vkGetDeviceProcAddr(device, "vkCmdCopyAccelerationStructureToMemoryKHR");
    vkCopyAccelerationStructureToMemoryKHR                   = xx vkGetDeviceProcAddr(device, "vkCopyAccelerationStructureToMemoryKHR");
    vkCmdCopyMemoryToAccelerationStructureKHR                = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToAccelerationStructureKHR");
    vkCopyMemoryToAccelerationStructureKHR                   = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToAccelerationStructureKHR");
    vkCmdWriteAccelerationStructuresPropertiesKHR            = xx vkGetDeviceProcAddr(device, "vkCmdWriteAccelerationStructuresPropertiesKHR");
    vkCmdWriteAccelerationStructuresPropertiesNV             = xx vkGetDeviceProcAddr(device, "vkCmdWriteAccelerationStructuresPropertiesNV");
    vkCmdBuildAccelerationStructureNV                        = xx vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructureNV");
    vkWriteAccelerationStructuresPropertiesKHR               = xx vkGetDeviceProcAddr(device, "vkWriteAccelerationStructuresPropertiesKHR");
    vkCmdTraceRaysKHR                                        = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysKHR");
    vkCmdTraceRaysNV                                         = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysNV");
    vkGetRayTracingShaderGroupHandlesKHR                     = xx vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupHandlesKHR");
    vkGetRayTracingCaptureReplayShaderGroupHandlesKHR        = xx vkGetDeviceProcAddr(device, "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR");
    vkGetAccelerationStructureHandleNV                       = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureHandleNV");
    vkCreateRayTracingPipelinesNV                            = xx vkGetDeviceProcAddr(device, "vkCreateRayTracingPipelinesNV");
    vkCreateRayTracingPipelinesKHR                           = xx vkGetDeviceProcAddr(device, "vkCreateRayTracingPipelinesKHR");
    vkCmdTraceRaysIndirectKHR                                = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysIndirectKHR");
    vkCmdTraceRaysIndirect2KHR                               = xx vkGetDeviceProcAddr(device, "vkCmdTraceRaysIndirect2KHR");
    vkGetClusterAccelerationStructureBuildSizesNV            = xx vkGetDeviceProcAddr(device, "vkGetClusterAccelerationStructureBuildSizesNV");
    vkCmdBuildClusterAccelerationStructureIndirectNV         = xx vkGetDeviceProcAddr(device, "vkCmdBuildClusterAccelerationStructureIndirectNV");
    vkGetDeviceAccelerationStructureCompatibilityKHR         = xx vkGetDeviceProcAddr(device, "vkGetDeviceAccelerationStructureCompatibilityKHR");
    vkGetRayTracingShaderGroupStackSizeKHR                   = xx vkGetDeviceProcAddr(device, "vkGetRayTracingShaderGroupStackSizeKHR");
    vkCmdSetRayTracingPipelineStackSizeKHR                   = xx vkGetDeviceProcAddr(device, "vkCmdSetRayTracingPipelineStackSizeKHR");
    vkGetImageViewHandleNVX                                  = xx vkGetDeviceProcAddr(device, "vkGetImageViewHandleNVX");
    vkGetImageViewHandle64NVX                                = xx vkGetDeviceProcAddr(device, "vkGetImageViewHandle64NVX");
    vkGetImageViewAddressNVX                                 = xx vkGetDeviceProcAddr(device, "vkGetImageViewAddressNVX");
    vkGetDeviceGroupSurfacePresentModes2EXT                  = xx vkGetDeviceProcAddr(device, "vkGetDeviceGroupSurfacePresentModes2EXT");
    vkAcquireFullScreenExclusiveModeEXT                      = xx vkGetDeviceProcAddr(device, "vkAcquireFullScreenExclusiveModeEXT");
    vkReleaseFullScreenExclusiveModeEXT                      = xx vkGetDeviceProcAddr(device, "vkReleaseFullScreenExclusiveModeEXT");
    vkAcquireProfilingLockKHR                                = xx vkGetDeviceProcAddr(device, "vkAcquireProfilingLockKHR");
    vkReleaseProfilingLockKHR                                = xx vkGetDeviceProcAddr(device, "vkReleaseProfilingLockKHR");
    vkGetImageDrmFormatModifierPropertiesEXT                 = xx vkGetDeviceProcAddr(device, "vkGetImageDrmFormatModifierPropertiesEXT");
    vkGetBufferOpaqueCaptureAddress                          = xx vkGetDeviceProcAddr(device, "vkGetBufferOpaqueCaptureAddress");
    vkGetBufferDeviceAddress                                 = xx vkGetDeviceProcAddr(device, "vkGetBufferDeviceAddress");
    vkInitializePerformanceApiINTEL                          = xx vkGetDeviceProcAddr(device, "vkInitializePerformanceApiINTEL");
    vkUninitializePerformanceApiINTEL                        = xx vkGetDeviceProcAddr(device, "vkUninitializePerformanceApiINTEL");
    vkCmdSetPerformanceMarkerINTEL                           = xx vkGetDeviceProcAddr(device, "vkCmdSetPerformanceMarkerINTEL");
    vkCmdSetPerformanceStreamMarkerINTEL                     = xx vkGetDeviceProcAddr(device, "vkCmdSetPerformanceStreamMarkerINTEL");
    vkCmdSetPerformanceOverrideINTEL                         = xx vkGetDeviceProcAddr(device, "vkCmdSetPerformanceOverrideINTEL");
    vkAcquirePerformanceConfigurationINTEL                   = xx vkGetDeviceProcAddr(device, "vkAcquirePerformanceConfigurationINTEL");
    vkReleasePerformanceConfigurationINTEL                   = xx vkGetDeviceProcAddr(device, "vkReleasePerformanceConfigurationINTEL");
    vkQueueSetPerformanceConfigurationINTEL                  = xx vkGetDeviceProcAddr(device, "vkQueueSetPerformanceConfigurationINTEL");
    vkGetPerformanceParameterINTEL                           = xx vkGetDeviceProcAddr(device, "vkGetPerformanceParameterINTEL");
    vkGetDeviceMemoryOpaqueCaptureAddress                    = xx vkGetDeviceProcAddr(device, "vkGetDeviceMemoryOpaqueCaptureAddress");
    vkGetPipelineExecutablePropertiesKHR                     = xx vkGetDeviceProcAddr(device, "vkGetPipelineExecutablePropertiesKHR");
    vkGetPipelineExecutableStatisticsKHR                     = xx vkGetDeviceProcAddr(device, "vkGetPipelineExecutableStatisticsKHR");
    vkGetPipelineExecutableInternalRepresentationsKHR        = xx vkGetDeviceProcAddr(device, "vkGetPipelineExecutableInternalRepresentationsKHR");
    vkCmdSetLineStipple                                      = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStipple");
    vkGetFaultData                                           = xx vkGetDeviceProcAddr(device, "vkGetFaultData");
    vkCreateAccelerationStructureKHR                         = xx vkGetDeviceProcAddr(device, "vkCreateAccelerationStructureKHR");
    vkCmdBuildAccelerationStructuresKHR                      = xx vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructuresKHR");
    vkCmdBuildAccelerationStructuresIndirectKHR              = xx vkGetDeviceProcAddr(device, "vkCmdBuildAccelerationStructuresIndirectKHR");
    vkBuildAccelerationStructuresKHR                         = xx vkGetDeviceProcAddr(device, "vkBuildAccelerationStructuresKHR");
    vkGetAccelerationStructureDeviceAddressKHR               = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureDeviceAddressKHR");
    vkCreateDeferredOperationKHR                             = xx vkGetDeviceProcAddr(device, "vkCreateDeferredOperationKHR");
    vkDestroyDeferredOperationKHR                            = xx vkGetDeviceProcAddr(device, "vkDestroyDeferredOperationKHR");
    vkGetDeferredOperationMaxConcurrencyKHR                  = xx vkGetDeviceProcAddr(device, "vkGetDeferredOperationMaxConcurrencyKHR");
    vkGetDeferredOperationResultKHR                          = xx vkGetDeviceProcAddr(device, "vkGetDeferredOperationResultKHR");
    vkDeferredOperationJoinKHR                               = xx vkGetDeviceProcAddr(device, "vkDeferredOperationJoinKHR");
    vkGetPipelineIndirectMemoryRequirementsNV                = xx vkGetDeviceProcAddr(device, "vkGetPipelineIndirectMemoryRequirementsNV");
    vkGetPipelineIndirectDeviceAddressNV                     = xx vkGetDeviceProcAddr(device, "vkGetPipelineIndirectDeviceAddressNV");
    vkAntiLagUpdateAMD                                       = xx vkGetDeviceProcAddr(device, "vkAntiLagUpdateAMD");
    vkCmdSetCullMode                                         = xx vkGetDeviceProcAddr(device, "vkCmdSetCullMode");
    vkCmdSetFrontFace                                        = xx vkGetDeviceProcAddr(device, "vkCmdSetFrontFace");
    vkCmdSetPrimitiveTopology                                = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveTopology");
    vkCmdSetViewportWithCount                                = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWithCount");
    vkCmdSetScissorWithCount                                 = xx vkGetDeviceProcAddr(device, "vkCmdSetScissorWithCount");
    vkCmdBindIndexBuffer2                                    = xx vkGetDeviceProcAddr(device, "vkCmdBindIndexBuffer2");
    vkCmdBindVertexBuffers2                                  = xx vkGetDeviceProcAddr(device, "vkCmdBindVertexBuffers2");
    vkCmdSetDepthTestEnable                                  = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthTestEnable");
    vkCmdSetDepthWriteEnable                                 = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthWriteEnable");
    vkCmdSetDepthCompareOp                                   = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthCompareOp");
    vkCmdSetDepthBoundsTestEnable                            = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBoundsTestEnable");
    vkCmdSetStencilTestEnable                                = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilTestEnable");
    vkCmdSetStencilOp                                        = xx vkGetDeviceProcAddr(device, "vkCmdSetStencilOp");
    vkCmdSetPatchControlPointsEXT                            = xx vkGetDeviceProcAddr(device, "vkCmdSetPatchControlPointsEXT");
    vkCmdSetRasterizerDiscardEnable                          = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizerDiscardEnable");
    vkCmdSetDepthBiasEnable                                  = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBiasEnable");
    vkCmdSetLogicOpEXT                                       = xx vkGetDeviceProcAddr(device, "vkCmdSetLogicOpEXT");
    vkCmdSetPrimitiveRestartEnable                           = xx vkGetDeviceProcAddr(device, "vkCmdSetPrimitiveRestartEnable");
    vkCmdSetTessellationDomainOriginEXT                      = xx vkGetDeviceProcAddr(device, "vkCmdSetTessellationDomainOriginEXT");
    vkCmdSetDepthClampEnableEXT                              = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClampEnableEXT");
    vkCmdSetPolygonModeEXT                                   = xx vkGetDeviceProcAddr(device, "vkCmdSetPolygonModeEXT");
    vkCmdSetRasterizationSamplesEXT                          = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizationSamplesEXT");
    vkCmdSetSampleMaskEXT                                    = xx vkGetDeviceProcAddr(device, "vkCmdSetSampleMaskEXT");
    vkCmdSetAlphaToCoverageEnableEXT                         = xx vkGetDeviceProcAddr(device, "vkCmdSetAlphaToCoverageEnableEXT");
    vkCmdSetAlphaToOneEnableEXT                              = xx vkGetDeviceProcAddr(device, "vkCmdSetAlphaToOneEnableEXT");
    vkCmdSetLogicOpEnableEXT                                 = xx vkGetDeviceProcAddr(device, "vkCmdSetLogicOpEnableEXT");
    vkCmdSetColorBlendEnableEXT                              = xx vkGetDeviceProcAddr(device, "vkCmdSetColorBlendEnableEXT");
    vkCmdSetColorBlendEquationEXT                            = xx vkGetDeviceProcAddr(device, "vkCmdSetColorBlendEquationEXT");
    vkCmdSetColorWriteMaskEXT                                = xx vkGetDeviceProcAddr(device, "vkCmdSetColorWriteMaskEXT");
    vkCmdSetRasterizationStreamEXT                           = xx vkGetDeviceProcAddr(device, "vkCmdSetRasterizationStreamEXT");
    vkCmdSetConservativeRasterizationModeEXT                 = xx vkGetDeviceProcAddr(device, "vkCmdSetConservativeRasterizationModeEXT");
    vkCmdSetExtraPrimitiveOverestimationSizeEXT              = xx vkGetDeviceProcAddr(device, "vkCmdSetExtraPrimitiveOverestimationSizeEXT");
    vkCmdSetDepthClipEnableEXT                               = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClipEnableEXT");
    vkCmdSetSampleLocationsEnableEXT                         = xx vkGetDeviceProcAddr(device, "vkCmdSetSampleLocationsEnableEXT");
    vkCmdSetColorBlendAdvancedEXT                            = xx vkGetDeviceProcAddr(device, "vkCmdSetColorBlendAdvancedEXT");
    vkCmdSetProvokingVertexModeEXT                           = xx vkGetDeviceProcAddr(device, "vkCmdSetProvokingVertexModeEXT");
    vkCmdSetLineRasterizationModeEXT                         = xx vkGetDeviceProcAddr(device, "vkCmdSetLineRasterizationModeEXT");
    vkCmdSetLineStippleEnableEXT                             = xx vkGetDeviceProcAddr(device, "vkCmdSetLineStippleEnableEXT");
    vkCmdSetDepthClipNegativeOneToOneEXT                     = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClipNegativeOneToOneEXT");
    vkCmdSetViewportWScalingEnableNV                         = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportWScalingEnableNV");
    vkCmdSetViewportSwizzleNV                                = xx vkGetDeviceProcAddr(device, "vkCmdSetViewportSwizzleNV");
    vkCmdSetCoverageToColorEnableNV                          = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageToColorEnableNV");
    vkCmdSetCoverageToColorLocationNV                        = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageToColorLocationNV");
    vkCmdSetCoverageModulationModeNV                         = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageModulationModeNV");
    vkCmdSetCoverageModulationTableEnableNV                  = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageModulationTableEnableNV");
    vkCmdSetCoverageModulationTableNV                        = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageModulationTableNV");
    vkCmdSetShadingRateImageEnableNV                         = xx vkGetDeviceProcAddr(device, "vkCmdSetShadingRateImageEnableNV");
    vkCmdSetCoverageReductionModeNV                          = xx vkGetDeviceProcAddr(device, "vkCmdSetCoverageReductionModeNV");
    vkCmdSetRepresentativeFragmentTestEnableNV               = xx vkGetDeviceProcAddr(device, "vkCmdSetRepresentativeFragmentTestEnableNV");
    vkCreatePrivateDataSlot                                  = xx vkGetDeviceProcAddr(device, "vkCreatePrivateDataSlot");
    vkDestroyPrivateDataSlot                                 = xx vkGetDeviceProcAddr(device, "vkDestroyPrivateDataSlot");
    vkSetPrivateData                                         = xx vkGetDeviceProcAddr(device, "vkSetPrivateData");
    vkGetPrivateData                                         = xx vkGetDeviceProcAddr(device, "vkGetPrivateData");
    vkCmdCopyBuffer2                                         = xx vkGetDeviceProcAddr(device, "vkCmdCopyBuffer2");
    vkCmdCopyImage2                                          = xx vkGetDeviceProcAddr(device, "vkCmdCopyImage2");
    vkCmdBlitImage2                                          = xx vkGetDeviceProcAddr(device, "vkCmdBlitImage2");
    vkCmdCopyBufferToImage2                                  = xx vkGetDeviceProcAddr(device, "vkCmdCopyBufferToImage2");
    vkCmdCopyImageToBuffer2                                  = xx vkGetDeviceProcAddr(device, "vkCmdCopyImageToBuffer2");
    vkCmdResolveImage2                                       = xx vkGetDeviceProcAddr(device, "vkCmdResolveImage2");
    vkCmdRefreshObjectsKHR                                   = xx vkGetDeviceProcAddr(device, "vkCmdRefreshObjectsKHR");
    vkCmdSetFragmentShadingRateKHR                           = xx vkGetDeviceProcAddr(device, "vkCmdSetFragmentShadingRateKHR");
    vkCmdSetFragmentShadingRateEnumNV                        = xx vkGetDeviceProcAddr(device, "vkCmdSetFragmentShadingRateEnumNV");
    vkGetAccelerationStructureBuildSizesKHR                  = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureBuildSizesKHR");
    vkCmdSetVertexInputEXT                                   = xx vkGetDeviceProcAddr(device, "vkCmdSetVertexInputEXT");
    vkCmdSetColorWriteEnableEXT                              = xx vkGetDeviceProcAddr(device, "vkCmdSetColorWriteEnableEXT");
    vkCmdSetEvent2                                           = xx vkGetDeviceProcAddr(device, "vkCmdSetEvent2");
    vkCmdResetEvent2                                         = xx vkGetDeviceProcAddr(device, "vkCmdResetEvent2");
    vkCmdWaitEvents2                                         = xx vkGetDeviceProcAddr(device, "vkCmdWaitEvents2");
    vkCmdPipelineBarrier2                                    = xx vkGetDeviceProcAddr(device, "vkCmdPipelineBarrier2");
    vkQueueSubmit2                                           = xx vkGetDeviceProcAddr(device, "vkQueueSubmit2");
    vkCmdWriteTimestamp2                                     = xx vkGetDeviceProcAddr(device, "vkCmdWriteTimestamp2");
    vkCmdWriteBufferMarker2AMD                               = xx vkGetDeviceProcAddr(device, "vkCmdWriteBufferMarker2AMD");
    vkGetQueueCheckpointData2NV                              = xx vkGetDeviceProcAddr(device, "vkGetQueueCheckpointData2NV");
    vkCopyMemoryToImage                                      = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToImage");
    vkCopyImageToMemory                                      = xx vkGetDeviceProcAddr(device, "vkCopyImageToMemory");
    vkCopyImageToImage                                       = xx vkGetDeviceProcAddr(device, "vkCopyImageToImage");
    vkTransitionImageLayout                                  = xx vkGetDeviceProcAddr(device, "vkTransitionImageLayout");
    vkGetCommandPoolMemoryConsumption                        = xx vkGetDeviceProcAddr(device, "vkGetCommandPoolMemoryConsumption");
    vkCreateVideoSessionKHR                                  = xx vkGetDeviceProcAddr(device, "vkCreateVideoSessionKHR");
    vkDestroyVideoSessionKHR                                 = xx vkGetDeviceProcAddr(device, "vkDestroyVideoSessionKHR");
    vkCreateVideoSessionParametersKHR                        = xx vkGetDeviceProcAddr(device, "vkCreateVideoSessionParametersKHR");
    vkUpdateVideoSessionParametersKHR                        = xx vkGetDeviceProcAddr(device, "vkUpdateVideoSessionParametersKHR");
    vkGetEncodedVideoSessionParametersKHR                    = xx vkGetDeviceProcAddr(device, "vkGetEncodedVideoSessionParametersKHR");
    vkDestroyVideoSessionParametersKHR                       = xx vkGetDeviceProcAddr(device, "vkDestroyVideoSessionParametersKHR");
    vkGetVideoSessionMemoryRequirementsKHR                   = xx vkGetDeviceProcAddr(device, "vkGetVideoSessionMemoryRequirementsKHR");
    vkBindVideoSessionMemoryKHR                              = xx vkGetDeviceProcAddr(device, "vkBindVideoSessionMemoryKHR");
    vkCmdDecodeVideoKHR                                      = xx vkGetDeviceProcAddr(device, "vkCmdDecodeVideoKHR");
    vkCmdBeginVideoCodingKHR                                 = xx vkGetDeviceProcAddr(device, "vkCmdBeginVideoCodingKHR");
    vkCmdControlVideoCodingKHR                               = xx vkGetDeviceProcAddr(device, "vkCmdControlVideoCodingKHR");
    vkCmdEndVideoCodingKHR                                   = xx vkGetDeviceProcAddr(device, "vkCmdEndVideoCodingKHR");
    vkCmdEncodeVideoKHR                                      = xx vkGetDeviceProcAddr(device, "vkCmdEncodeVideoKHR");
    vkCmdDecompressMemoryNV                                  = xx vkGetDeviceProcAddr(device, "vkCmdDecompressMemoryNV");
    vkCmdDecompressMemoryIndirectCountNV                     = xx vkGetDeviceProcAddr(device, "vkCmdDecompressMemoryIndirectCountNV");
    vkGetPartitionedAccelerationStructuresBuildSizesNV       = xx vkGetDeviceProcAddr(device, "vkGetPartitionedAccelerationStructuresBuildSizesNV");
    vkCmdBuildPartitionedAccelerationStructuresNV            = xx vkGetDeviceProcAddr(device, "vkCmdBuildPartitionedAccelerationStructuresNV");
    vkCreateCuModuleNVX                                      = xx vkGetDeviceProcAddr(device, "vkCreateCuModuleNVX");
    vkCreateCuFunctionNVX                                    = xx vkGetDeviceProcAddr(device, "vkCreateCuFunctionNVX");
    vkDestroyCuModuleNVX                                     = xx vkGetDeviceProcAddr(device, "vkDestroyCuModuleNVX");
    vkDestroyCuFunctionNVX                                   = xx vkGetDeviceProcAddr(device, "vkDestroyCuFunctionNVX");
    vkCmdCuLaunchKernelNVX                                   = xx vkGetDeviceProcAddr(device, "vkCmdCuLaunchKernelNVX");
    vkGetDescriptorSetLayoutSizeEXT                          = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutSizeEXT");
    vkGetDescriptorSetLayoutBindingOffsetEXT                 = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutBindingOffsetEXT");
    vkGetDescriptorEXT                                       = xx vkGetDeviceProcAddr(device, "vkGetDescriptorEXT");
    vkCmdBindDescriptorBuffersEXT                            = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorBuffersEXT");
    vkCmdSetDescriptorBufferOffsetsEXT                       = xx vkGetDeviceProcAddr(device, "vkCmdSetDescriptorBufferOffsetsEXT");
    vkCmdBindDescriptorBufferEmbeddedSamplersEXT             = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorBufferEmbeddedSamplersEXT");
    vkGetBufferOpaqueCaptureDescriptorDataEXT                = xx vkGetDeviceProcAddr(device, "vkGetBufferOpaqueCaptureDescriptorDataEXT");
    vkGetImageOpaqueCaptureDescriptorDataEXT                 = xx vkGetDeviceProcAddr(device, "vkGetImageOpaqueCaptureDescriptorDataEXT");
    vkGetImageViewOpaqueCaptureDescriptorDataEXT             = xx vkGetDeviceProcAddr(device, "vkGetImageViewOpaqueCaptureDescriptorDataEXT");
    vkGetSamplerOpaqueCaptureDescriptorDataEXT               = xx vkGetDeviceProcAddr(device, "vkGetSamplerOpaqueCaptureDescriptorDataEXT");
    vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = xx vkGetDeviceProcAddr(device, "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT");
    vkSetDeviceMemoryPriorityEXT                             = xx vkGetDeviceProcAddr(device, "vkSetDeviceMemoryPriorityEXT");
    vkWaitForPresent2KHR                                     = xx vkGetDeviceProcAddr(device, "vkWaitForPresent2KHR");
    vkWaitForPresentKHR                                      = xx vkGetDeviceProcAddr(device, "vkWaitForPresentKHR");
    vkCreateBufferCollectionFUCHSIA                          = xx vkGetDeviceProcAddr(device, "vkCreateBufferCollectionFUCHSIA");
    vkSetBufferCollectionBufferConstraintsFUCHSIA            = xx vkGetDeviceProcAddr(device, "vkSetBufferCollectionBufferConstraintsFUCHSIA");
    vkSetBufferCollectionImageConstraintsFUCHSIA             = xx vkGetDeviceProcAddr(device, "vkSetBufferCollectionImageConstraintsFUCHSIA");
    vkDestroyBufferCollectionFUCHSIA                         = xx vkGetDeviceProcAddr(device, "vkDestroyBufferCollectionFUCHSIA");
    vkGetBufferCollectionPropertiesFUCHSIA                   = xx vkGetDeviceProcAddr(device, "vkGetBufferCollectionPropertiesFUCHSIA");
    vkCreateCudaModuleNV                                     = xx vkGetDeviceProcAddr(device, "vkCreateCudaModuleNV");
    vkGetCudaModuleCacheNV                                   = xx vkGetDeviceProcAddr(device, "vkGetCudaModuleCacheNV");
    vkCreateCudaFunctionNV                                   = xx vkGetDeviceProcAddr(device, "vkCreateCudaFunctionNV");
    vkDestroyCudaModuleNV                                    = xx vkGetDeviceProcAddr(device, "vkDestroyCudaModuleNV");
    vkDestroyCudaFunctionNV                                  = xx vkGetDeviceProcAddr(device, "vkDestroyCudaFunctionNV");
    vkCmdCudaLaunchKernelNV                                  = xx vkGetDeviceProcAddr(device, "vkCmdCudaLaunchKernelNV");
    vkCmdBeginRendering                                      = xx vkGetDeviceProcAddr(device, "vkCmdBeginRendering");
    vkCmdEndRendering                                        = xx vkGetDeviceProcAddr(device, "vkCmdEndRendering");
    vkCmdEndRendering2EXT                                    = xx vkGetDeviceProcAddr(device, "vkCmdEndRendering2EXT");
    vkGetDescriptorSetLayoutHostMappingInfoVALVE             = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetLayoutHostMappingInfoVALVE");
    vkGetDescriptorSetHostMappingVALVE                       = xx vkGetDeviceProcAddr(device, "vkGetDescriptorSetHostMappingVALVE");
    vkCreateMicromapEXT                                      = xx vkGetDeviceProcAddr(device, "vkCreateMicromapEXT");
    vkCmdBuildMicromapsEXT                                   = xx vkGetDeviceProcAddr(device, "vkCmdBuildMicromapsEXT");
    vkBuildMicromapsEXT                                      = xx vkGetDeviceProcAddr(device, "vkBuildMicromapsEXT");
    vkDestroyMicromapEXT                                     = xx vkGetDeviceProcAddr(device, "vkDestroyMicromapEXT");
    vkCmdCopyMicromapEXT                                     = xx vkGetDeviceProcAddr(device, "vkCmdCopyMicromapEXT");
    vkCopyMicromapEXT                                        = xx vkGetDeviceProcAddr(device, "vkCopyMicromapEXT");
    vkCmdCopyMicromapToMemoryEXT                             = xx vkGetDeviceProcAddr(device, "vkCmdCopyMicromapToMemoryEXT");
    vkCopyMicromapToMemoryEXT                                = xx vkGetDeviceProcAddr(device, "vkCopyMicromapToMemoryEXT");
    vkCmdCopyMemoryToMicromapEXT                             = xx vkGetDeviceProcAddr(device, "vkCmdCopyMemoryToMicromapEXT");
    vkCopyMemoryToMicromapEXT                                = xx vkGetDeviceProcAddr(device, "vkCopyMemoryToMicromapEXT");
    vkCmdWriteMicromapsPropertiesEXT                         = xx vkGetDeviceProcAddr(device, "vkCmdWriteMicromapsPropertiesEXT");
    vkWriteMicromapsPropertiesEXT                            = xx vkGetDeviceProcAddr(device, "vkWriteMicromapsPropertiesEXT");
    vkGetDeviceMicromapCompatibilityEXT                      = xx vkGetDeviceProcAddr(device, "vkGetDeviceMicromapCompatibilityEXT");
    vkGetMicromapBuildSizesEXT                               = xx vkGetDeviceProcAddr(device, "vkGetMicromapBuildSizesEXT");
    vkGetShaderModuleIdentifierEXT                           = xx vkGetDeviceProcAddr(device, "vkGetShaderModuleIdentifierEXT");
    vkGetShaderModuleCreateInfoIdentifierEXT                 = xx vkGetDeviceProcAddr(device, "vkGetShaderModuleCreateInfoIdentifierEXT");
    vkGetImageSubresourceLayout2                             = xx vkGetDeviceProcAddr(device, "vkGetImageSubresourceLayout2");
    vkGetPipelinePropertiesEXT                               = xx vkGetDeviceProcAddr(device, "vkGetPipelinePropertiesEXT");
    vkExportMetalObjectsEXT                                  = xx vkGetDeviceProcAddr(device, "vkExportMetalObjectsEXT");
    vkCmdBindTileMemoryQCOM                                  = xx vkGetDeviceProcAddr(device, "vkCmdBindTileMemoryQCOM");
    vkGetFramebufferTilePropertiesQCOM                       = xx vkGetDeviceProcAddr(device, "vkGetFramebufferTilePropertiesQCOM");
    vkGetDynamicRenderingTilePropertiesQCOM                  = xx vkGetDeviceProcAddr(device, "vkGetDynamicRenderingTilePropertiesQCOM");
    vkCreateOpticalFlowSessionNV                             = xx vkGetDeviceProcAddr(device, "vkCreateOpticalFlowSessionNV");
    vkDestroyOpticalFlowSessionNV                            = xx vkGetDeviceProcAddr(device, "vkDestroyOpticalFlowSessionNV");
    vkBindOpticalFlowSessionImageNV                          = xx vkGetDeviceProcAddr(device, "vkBindOpticalFlowSessionImageNV");
    vkCmdOpticalFlowExecuteNV                                = xx vkGetDeviceProcAddr(device, "vkCmdOpticalFlowExecuteNV");
    vkGetDeviceFaultInfoEXT                                  = xx vkGetDeviceProcAddr(device, "vkGetDeviceFaultInfoEXT");
    vkCmdSetDepthBias2EXT                                    = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthBias2EXT");
    vkReleaseSwapchainImagesKHR                              = xx vkGetDeviceProcAddr(device, "vkReleaseSwapchainImagesKHR");
    vkGetDeviceImageSubresourceLayout                        = xx vkGetDeviceProcAddr(device, "vkGetDeviceImageSubresourceLayout");
    vkMapMemory2                                             = xx vkGetDeviceProcAddr(device, "vkMapMemory2");
    vkUnmapMemory2                                           = xx vkGetDeviceProcAddr(device, "vkUnmapMemory2");
    vkCreateShadersEXT                                       = xx vkGetDeviceProcAddr(device, "vkCreateShadersEXT");
    vkDestroyShaderEXT                                       = xx vkGetDeviceProcAddr(device, "vkDestroyShaderEXT");
    vkGetShaderBinaryDataEXT                                 = xx vkGetDeviceProcAddr(device, "vkGetShaderBinaryDataEXT");
    vkCmdBindShadersEXT                                      = xx vkGetDeviceProcAddr(device, "vkCmdBindShadersEXT");
    vkGetScreenBufferPropertiesQNX                           = xx vkGetDeviceProcAddr(device, "vkGetScreenBufferPropertiesQNX");
    vkGetExecutionGraphPipelineScratchSizeAMDX               = xx vkGetDeviceProcAddr(device, "vkGetExecutionGraphPipelineScratchSizeAMDX");
    vkGetExecutionGraphPipelineNodeIndexAMDX                 = xx vkGetDeviceProcAddr(device, "vkGetExecutionGraphPipelineNodeIndexAMDX");
    vkCreateExecutionGraphPipelinesAMDX                      = xx vkGetDeviceProcAddr(device, "vkCreateExecutionGraphPipelinesAMDX");
    vkCmdInitializeGraphScratchMemoryAMDX                    = xx vkGetDeviceProcAddr(device, "vkCmdInitializeGraphScratchMemoryAMDX");
    vkCmdDispatchGraphAMDX                                   = xx vkGetDeviceProcAddr(device, "vkCmdDispatchGraphAMDX");
    vkCmdDispatchGraphIndirectAMDX                           = xx vkGetDeviceProcAddr(device, "vkCmdDispatchGraphIndirectAMDX");
    vkCmdDispatchGraphIndirectCountAMDX                      = xx vkGetDeviceProcAddr(device, "vkCmdDispatchGraphIndirectCountAMDX");
    vkCmdBindDescriptorSets2                                 = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorSets2");
    vkCmdPushConstants2                                      = xx vkGetDeviceProcAddr(device, "vkCmdPushConstants2");
    vkCmdPushDescriptorSet2                                  = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSet2");
    vkCmdPushDescriptorSetWithTemplate2                      = xx vkGetDeviceProcAddr(device, "vkCmdPushDescriptorSetWithTemplate2");
    vkCmdSetDescriptorBufferOffsets2EXT                      = xx vkGetDeviceProcAddr(device, "vkCmdSetDescriptorBufferOffsets2EXT");
    vkCmdBindDescriptorBufferEmbeddedSamplers2EXT            = xx vkGetDeviceProcAddr(device, "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT");
    vkSetLatencySleepModeNV                                  = xx vkGetDeviceProcAddr(device, "vkSetLatencySleepModeNV");
    vkLatencySleepNV                                         = xx vkGetDeviceProcAddr(device, "vkLatencySleepNV");
    vkSetLatencyMarkerNV                                     = xx vkGetDeviceProcAddr(device, "vkSetLatencyMarkerNV");
    vkGetLatencyTimingsNV                                    = xx vkGetDeviceProcAddr(device, "vkGetLatencyTimingsNV");
    vkQueueNotifyOutOfBandNV                                 = xx vkGetDeviceProcAddr(device, "vkQueueNotifyOutOfBandNV");
    vkCmdSetRenderingAttachmentLocations                     = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingAttachmentLocations");
    vkCmdSetRenderingInputAttachmentIndices                  = xx vkGetDeviceProcAddr(device, "vkCmdSetRenderingInputAttachmentIndices");
    vkCmdSetDepthClampRangeEXT                               = xx vkGetDeviceProcAddr(device, "vkCmdSetDepthClampRangeEXT");
    vkGetMemoryMetalHandleEXT                                = xx vkGetDeviceProcAddr(device, "vkGetMemoryMetalHandleEXT");
    vkGetMemoryMetalHandlePropertiesEXT                      = xx vkGetDeviceProcAddr(device, "vkGetMemoryMetalHandlePropertiesEXT");
    vkConvertCooperativeVectorMatrixNV                       = xx vkGetDeviceProcAddr(device, "vkConvertCooperativeVectorMatrixNV");
    vkCmdConvertCooperativeVectorMatrixNV                    = xx vkGetDeviceProcAddr(device, "vkCmdConvertCooperativeVectorMatrixNV");
    vkCmdDispatchTileQCOM                                    = xx vkGetDeviceProcAddr(device, "vkCmdDispatchTileQCOM");
    vkCmdBeginPerTileExecutionQCOM                           = xx vkGetDeviceProcAddr(device, "vkCmdBeginPerTileExecutionQCOM");
    vkCmdEndPerTileExecutionQCOM                             = xx vkGetDeviceProcAddr(device, "vkCmdEndPerTileExecutionQCOM");
    vkCreateExternalComputeQueueNV                           = xx vkGetDeviceProcAddr(device, "vkCreateExternalComputeQueueNV");
    vkDestroyExternalComputeQueueNV                          = xx vkGetDeviceProcAddr(device, "vkDestroyExternalComputeQueueNV");
    vkGetExternalComputeQueueDataNV                          = xx vkGetDeviceProcAddr(device, "vkGetExternalComputeQueueDataNV");
    vkCreateTensorARM                                        = xx vkGetDeviceProcAddr(device, "vkCreateTensorARM");
    vkDestroyTensorARM                                       = xx vkGetDeviceProcAddr(device, "vkDestroyTensorARM");
    vkCreateTensorViewARM                                    = xx vkGetDeviceProcAddr(device, "vkCreateTensorViewARM");
    vkDestroyTensorViewARM                                   = xx vkGetDeviceProcAddr(device, "vkDestroyTensorViewARM");
    vkGetTensorMemoryRequirementsARM                         = xx vkGetDeviceProcAddr(device, "vkGetTensorMemoryRequirementsARM");
    vkBindTensorMemoryARM                                    = xx vkGetDeviceProcAddr(device, "vkBindTensorMemoryARM");
    vkGetDeviceTensorMemoryRequirementsARM                   = xx vkGetDeviceProcAddr(device, "vkGetDeviceTensorMemoryRequirementsARM");
    vkCmdCopyTensorARM                                       = xx vkGetDeviceProcAddr(device, "vkCmdCopyTensorARM");
    vkGetTensorOpaqueCaptureDescriptorDataARM                = xx vkGetDeviceProcAddr(device, "vkGetTensorOpaqueCaptureDescriptorDataARM");
    vkGetTensorViewOpaqueCaptureDescriptorDataARM            = xx vkGetDeviceProcAddr(device, "vkGetTensorViewOpaqueCaptureDescriptorDataARM");
    vkCreateDataGraphPipelinesARM                            = xx vkGetDeviceProcAddr(device, "vkCreateDataGraphPipelinesARM");
    vkCreateDataGraphPipelineSessionARM                      = xx vkGetDeviceProcAddr(device, "vkCreateDataGraphPipelineSessionARM");
    vkGetDataGraphPipelineSessionBindPointRequirementsARM    = xx vkGetDeviceProcAddr(device, "vkGetDataGraphPipelineSessionBindPointRequirementsARM");
    vkGetDataGraphPipelineSessionMemoryRequirementsARM       = xx vkGetDeviceProcAddr(device, "vkGetDataGraphPipelineSessionMemoryRequirementsARM");
    vkBindDataGraphPipelineSessionMemoryARM                  = xx vkGetDeviceProcAddr(device, "vkBindDataGraphPipelineSessionMemoryARM");
    vkDestroyDataGraphPipelineSessionARM                     = xx vkGetDeviceProcAddr(device, "vkDestroyDataGraphPipelineSessionARM");
    vkCmdDispatchDataGraphARM                                = xx vkGetDeviceProcAddr(device, "vkCmdDispatchDataGraphARM");
    vkGetDataGraphPipelineAvailablePropertiesARM             = xx vkGetDeviceProcAddr(device, "vkGetDataGraphPipelineAvailablePropertiesARM");
    vkGetDataGraphPipelinePropertiesARM                      = xx vkGetDeviceProcAddr(device, "vkGetDataGraphPipelinePropertiesARM");
}
